{"version":3,"file":"SamV2Api.mjs","sourceRoot":"","sources":["../../tsSourcesProject/api/SamV2Api.mts"],"names":[],"mappings":"","sourcesContent":["// auto-generated file\nimport {PaginatedListIterator} from '../cardinal-be-sam-ts.mjs';\nimport {Amp} from '../model/samv2/Amp.mjs';\nimport {Nmp} from '../model/samv2/Nmp.mjs';\nimport {Paragraph} from '../model/samv2/Paragraph.mjs';\nimport {PharmaceuticalForm} from '../model/samv2/PharmaceuticalForm.mjs';\nimport {SamVersion} from '../model/samv2/SamVersion.mjs';\nimport {Substance} from '../model/samv2/Substance.mjs';\nimport {Verse} from '../model/samv2/Verse.mjs';\nimport {Vmp} from '../model/samv2/Vmp.mjs';\nimport {VmpGroup} from '../model/samv2/VmpGroup.mjs';\n\n\nexport interface SamV2Api {\n\n\tgetSamVersion(): Promise<SamVersion>;\n\n\tfindPaginatedAmpsByLabel(language: string | undefined,\n\t\t\tlabel: string | undefined): Promise<PaginatedListIterator<Amp>>;\n\n\tfindPaginatedVmpsByLabel(language: string | undefined,\n\t\t\tlabel: string | undefined): Promise<PaginatedListIterator<Vmp>>;\n\n\tfindPaginatedVmpsByGroupCode(vmpgCode: string): Promise<PaginatedListIterator<Vmp>>;\n\n\tfindPaginatedVmpsByVmpCode(vmpCode: string): Promise<PaginatedListIterator<Vmp>>;\n\n\tfindPaginatedNmpsByLabel(language: string | undefined,\n\t\t\tlabel: string | undefined): Promise<PaginatedListIterator<Nmp>>;\n\n\tfindPaginatedVmpsByGroupId(vmpgId: string): Promise<PaginatedListIterator<Vmp>>;\n\n\tfindPaginatedAmpsByGroupCode(vmpgCode: string): Promise<PaginatedListIterator<Amp>>;\n\n\tfindPaginatedAmpsByGroupId(ampId: string): Promise<PaginatedListIterator<Amp>>;\n\n\tfindPaginatedAmpsByVmpCode(vmpCode: string): Promise<PaginatedListIterator<Amp>>;\n\n\tfindPaginatedAmpsByAtc(atcCode: string): Promise<PaginatedListIterator<Amp>>;\n\n\tfindPaginatedAmpsByVmpId(vmpId: string): Promise<PaginatedListIterator<Amp>>;\n\n\tfindAmpsByDmppCode(dmppCode: string): Promise<Array<Amp>>;\n\n\tfindAmpsByAmpCode(ampCode: string): Promise<Array<Amp>>;\n\n\tfindPaginatedVmpGroupsByLabel(language: string | undefined,\n\t\t\tlabel: string | undefined): Promise<PaginatedListIterator<VmpGroup>>;\n\n\tfindPaginatedVmpGroupsByVmpGroupCode(vmpgCode: string): Promise<PaginatedListIterator<VmpGroup>>;\n\n\tlistVmpsByVmpCodes(vmpCodes: Array<string>): Promise<Array<Vmp>>;\n\n\tlistVmpsByGroupIds(vmpgIds: Array<string>): Promise<Array<Vmp>>;\n\n\tlistAmpsByGroupCodes(ampCodes: Array<string>): Promise<Array<Amp>>;\n\n\tlistAmpsByDmppCodes(dmppCodes: Array<string>): Promise<Array<Amp>>;\n\n\tlistAmpsByGroupIds(groupIds: Array<string>): Promise<Array<Amp>>;\n\n\tlistAmpsByVmpCodes(vmpgCodes: Array<string>): Promise<Array<Amp>>;\n\n\tlistAmpsByVmpIds(vmpIds: Array<string>): Promise<Array<Amp>>;\n\n\tlistVmpGroupsByVmpGroupCodes(vmpgCodes: Array<string>): Promise<Array<VmpGroup>>;\n\n\tlistNmpsByCnks(cnks: Array<string>): Promise<Array<Nmp>>;\n\n\tlistSubstances(): Promise<Array<Substance>>;\n\n\tlistPharmaceuticalForms(): Promise<Array<PharmaceuticalForm>>;\n\n\tgetAddedDocument(\n\t\t\tchapterName: string,\n\t\t\tparagraphName: string,\n\t\t\tverseSeq: number,\n\t\t\tdocSeq: number,\n\t\t\tlanguage: string\n\t): Promise<Int8Array>;\n\n\tfindParagraphs(searchString: string, language: string): Promise<Array<Paragraph>>;\n\n\tfindParagraphsWithCnk(cnk: number, language: string): Promise<Array<Paragraph>>;\n\n\tgetAmpsForParagraph(chapterName: string, paragraphName: string): Promise<Array<Amp>>;\n\n\tgetVtmNamesForParagraph(chapterName: string, paragraphName: string,\n\t\t\tlanguage: string): Promise<Array<string>>;\n\n\tgetVersesHierarchy(chapterName: string, paragraphName: string): Promise<Verse | undefined>;\n\n}\n"]}