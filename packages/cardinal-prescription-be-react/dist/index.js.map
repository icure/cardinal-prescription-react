{"version":3,"sources":["../src/index.ts","../src/components/common/Icons/index.tsx","../src/components/form-elements/Button/styles.ts","../src/styles/reset.ts","../src/styles/variables.ts","../src/styles/elements.ts","../src/components/form-elements/Button/index.tsx","../src/components/form-elements/RadioInput/index.tsx","../src/components/form-elements/RadioInput/styles.ts","../src/components/form-elements/SelectInput/styles.ts","../src/components/form-elements/SelectInput/index.tsx","../src/components/form-elements/TextareaInput/styles.ts","../src/components/form-elements/TextareaInput/index.tsx","../src/components/form-elements/TextInput/index.tsx","../src/components/form-elements/TextInput/styles.ts","../src/components/form-elements/ToggleSwitch/index.tsx","../src/components/form-elements/ToggleSwitch/styles.ts"],"sourcesContent":["export * from './components/form-elements/Button'\nexport * from './components/form-elements/RadioInput'\nexport * from './components/form-elements/SelectInput'\nexport * from './components/form-elements/TextareaInput'\nexport * from './components/form-elements/TextInput'\nexport * from './components/form-elements/ToggleSwitch'\n","import React from 'react'\n\nexport function SpinnerIcn({ pathFill = '#000000', size = 12 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\" width=\"24\" height=\"24\">\n      <g>\n        <circle strokeDasharray=\"169.64600329384882 58.548667764616276\" r=\"36\" strokeWidth=\"12\" stroke={pathFill} fill=\"none\" cy=\"50\" cx=\"50\">\n          <animateTransform keyTimes=\"0;1\" values=\"0 50 50;360 50 50\" dur=\"1s\" repeatCount=\"indefinite\" type=\"rotate\" attributeName=\"transform\"></animateTransform>\n        </circle>\n        <g></g>\n      </g>\n    </svg>\n  )\n}\n\nexport function BlackTriangleIcn({ pathFill = '#000000', size = 12 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d={\n          'M5.37602 8.49475C5.49353 8.4276 5.59093 8.33021 5.65808 8.21269L8.9 2.53934C9.1077 2.17586 8.98142 1.71282 8.61793 ' +\n          '1.50511C8.5034 1.43966 8.37377 1.40524 8.24185 1.40524H1.75802C1.33938 1.40524 1 1.74461 1 2.16326C1 2.29517 1.03443 ' +\n          '2.4248 1.09987 2.53934L4.34179 8.21269C4.54949 8.57617 5.01253 8.70246 5.37602 8.49475Z'\n        }\n        fill={pathFill}\n      />\n    </svg>\n  )\n}\n\nexport function ChevronIcn({ pathFill = '#3D87C5', size = 12 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_153_633)\">\n        <path\n          d={\n            'M2.57153 1.018L2.57153 2.02247C2.57153 2.09077 2.60502 2.15505 2.65993 2.19523L7.90457 6.00014L2.65993 ' +\n            '9.80506C2.60502 9.84523 2.57153 9.90952 2.57153 9.97782L2.57153 10.9823C2.57153 11.0693 2.67064 11.1202 ' +\n            '2.74162 11.0693L9.25189 6.34702C9.4876 6.17559 9.4876 5.8247 9.25189 5.65461L2.74162 0.932286C2.67064 0.880054 ' +\n            '2.57153 0.930947 2.57153 1.018Z'\n          }\n          fill={pathFill}\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_153_633\">\n          <rect style={{ width: sizePx, height: sizePx }} fill=\"white\" transform=\"matrix(0 -1 1 0 0 12)\" />\n        </clipPath>\n      </defs>\n    </svg>\n  )\n}\n\nexport function CloseIcn({ pathFill = '#6A6D78', size = 16 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d={\n          'M13.1404 2.32697C13.1407 2.32697 13.1411 2.32732 13.1418 2.32804L14.172 3.3584C14.1727 3.35893 14.1729 ' +\n          '3.35929 14.1731 3.35982C14.1732 3.36018 14.1732 3.36054 14.1731 3.3609C14.1731 3.36143 14.1727 3.36179 14.172 ' +\n          '3.3625L9.0345 8.5L14.172 13.6375C14.1727 13.6382 14.1729 13.6386 14.1731 13.6391C14.1732 13.6395 14.1732 13.64 ' +\n          '14.1731 13.6404C14.1731 13.6407 14.1727 13.6411 14.172 13.6418L13.1416 14.672C13.1411 14.6727 13.1407 14.6729 ' +\n          '13.1404 14.673C13.14 14.6732 13.1395 14.6732 13.1391 14.673C13.1386 14.673 13.1382 14.6727 13.1375 14.672L8.00003 ' +\n          '9.53447L2.86253 14.672C2.86182 14.6727 2.86146 14.6729 2.86093 14.673C2.86052 14.6732 2.86008 14.6732 2.85968 ' +\n          '14.673C2.85932 14.673 2.85896 14.6727 2.85825 14.672L1.82807 13.6416C1.82735 13.6411 1.82718 13.6407 1.827 ' +\n          '13.6404C1.82687 13.64 1.82687 13.6395 1.827 13.6391C1.827 13.6386 1.82735 13.6382 1.82807 13.6375L6.96557 ' +\n          '8.5L1.82807 3.3625C1.82735 3.36179 1.82718 3.36143 1.827 3.3609C1.82687 13.36049 1.82687 3.36005 1.827 3.35965C1.827 ' +\n          '3.35929 1.82735 3.35893 1.82807 3.35822L2.85843 2.32804C2.85896 2.32732 2.85932 2.32715 2.85968 2.32697C2.86008 2.32684 ' +\n          '2.86052 2.32684 2.86093 2.32697C2.86146 2.32697 2.86182 2.32732 2.86253 2.32804L8.00003 7.46554L13.1375 2.32804C13.1382 ' +\n          '2.32732 13.1386 2.32715 13.1391 2.32697C13.1395 2.32684 13.14 2.32684 13.1404 2.32697Z'\n        }\n        fill={pathFill}\n      />\n    </svg>\n  )\n}\n\nexport function DeleteIcn({ pathFill = '#383A3C', size = 14 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d={\n          'M5.83325 5.25C6.15542 5.25 6.41659 5.51116 6.41659 5.83333V9.625C6.41659 9.94716 6.15542 10.2083 5.83325 ' +\n          '10.2083C5.51109 10.2083 5.24992 9.94716 5.24992 9.625V5.83333C5.24992 5.51116 5.51109 5.25 5.83325 5.25Z'\n        }\n        fill={pathFill}\n      />\n      <path\n        d={\n          'M8.74992 5.83333C8.74992 5.51116 8.48875 5.25 8.16659 5.25C7.84442 5.25 7.58325 5.51116 7.58325 ' +\n          '5.83333V9.625C7.58325 9.94716 7.84442 10.2083 8.16659 10.2083C8.48875 10.2083 8.74992 9.94716 8.74992 9.625V5.83333Z'\n        }\n        fill={pathFill}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d={\n          'M5.62588 0.583328C5.41285 0.583328 5.21676 0.699457 5.11436 0.886263L4.32112 2.33333H1.16659C0.844419 ' +\n          '2.33333 0.583252 2.5945 0.583252 2.91666C0.583252 3.23883 0.844419 3.5 1.16659 3.5H2.04159V12.8333C2.04159 ' +\n          '13.1555 2.30275 13.4167 2.62492 13.4167H11.3749C11.6971 13.4167 11.9583 13.1555 11.9583 ' +\n          '12.8333V3.5H12.8333C13.1554 3.5 13.4166 3.23883 13.4166 2.91666C13.4166 2.5945 13.1554 2.33333 ' +\n          '12.8333 2.33333H9.68208L8.90713 0.890626C8.80548 0.701388 8.60805 0.583328 8.39324 0.583328H5.62588ZM8.35775 ' +\n          '2.33333L8.04442 1.74999H5.97134L5.65158 2.33333H8.35775ZM3.20825 3.5V12.25H10.7916V3.5H3.20825Z'\n        }\n        fill={pathFill}\n      />\n    </svg>\n  )\n}\n\nexport function EditIcn({ pathFill = '#383A3C', size = 14 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d={\n          'M7.277 9.81459L12.1624 4.92917L11.4041 4.17084L6.51867 9.05626L7.277 9.81459ZM3.47075 11.0833C2.49853 ' +\n          '11.0347 1.77422 10.8306 1.29784 10.4708C0.821446 10.1111 0.583252 9.59098 0.583252 8.91042C0.583252 8.27848 ' +\n          '0.843321 7.76563 1.36346 7.37188C1.8836 6.97813 2.60547 6.74237 3.52909 6.66459C3.90825 6.63542 4.19263 ' +\n          '6.57466 4.38221 6.4823C4.57179 6.38994 4.66659 6.26112 4.66659 6.09584C4.66659 5.84306 4.52318 5.65348 ' +\n          '4.23638 5.52709C3.94957 5.4007 3.47561 5.30834 2.8145 5.25001L2.91659 4.08334C3.91797 4.16112 4.65443 4.36285 ' +\n          '5.12596 4.68855C5.59749 5.01424 5.83325 5.48334 5.83325 6.09584C5.83325 6.61112 5.6461 7.01459 5.27179 ' +\n          '7.30626C4.89749 7.59792 4.34575 7.77292 3.61659 7.83125C2.99436 7.87987 2.5277 7.9941 2.21659 8.17396C1.90547 ' +\n          '8.35382 1.74992 8.59931 1.74992 8.91042C1.74992 9.2507 1.88603 9.49619 2.15825 9.64688C2.43047 9.79757 2.88742 ' +\n          '9.88751 3.52909 9.91667L3.47075 11.0833ZM7.55409 11.1854L5.14784 8.77917L10.7187 3.20834C10.9131 3.01389 ' +\n          '11.144 2.91667 11.4114 2.91667C11.6787 2.91667 11.9096 3.01389 12.1041 3.20834L13.1249 4.22917C13.3194 ' +\n          '4.42362 13.4166 4.65452 13.4166 4.92188C13.4166 5.18924 13.3194 5.42014 13.1249 5.61459L7.55409 11.1854ZM5.23534 ' +\n          '11.6667C5.07006 11.7056 4.92422 11.6618 4.79784 11.5354C4.67145 11.409 4.6277 11.2632 4.66659 11.0979L5.14784 ' +\n          '8.77917L7.55409 11.1854L5.23534 11.6667Z'\n        }\n        fill={pathFill}\n      />\n    </svg>\n  )\n}\n\nexport function EndOfCommercialisationIcn({ pathFill = '#EE1313', size = 15 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_330_2887)\">\n        <path\n          d=\"M4.65801 10.3098C4.52446 10.2195 4.36185 10.1662 4.18897 10.1664C4.07385 10.1664 3.96278 10.1899 3.86218\n          10.2325C3.71139 10.2963 3.58384 10.4023 3.49335 10.5362C3.40283 10.6698 3.34991 10.8324 3.3501 11.0052C3.34991\n          11.1204 3.37335 11.2314 3.416 11.3318C3.47997 11.4828 3.58579 11.6104 3.71952 11.7007C3.85328 11.7914 4.01608\n          11.8443 4.18897 11.8443C4.3041 11.8443 4.41496 11.8208 4.51536 11.7782C4.66635 11.7144 4.79408 11.6082 4.88439\n          11.4745C4.97472 11.3409 5.0278 11.1781 5.0278 11.0052C5.0278 10.8901 5.00415 10.7793 4.96171 10.6787C4.89793\n          10.5277 4.79174 10.4002 4.65801 10.3098ZM4.50062 11.1368C4.47503 11.1973 4.43181 11.2495 4.37772 11.2859C4.32346\n          11.3224 4.2599 11.3435 4.18895 11.3437C4.14147 11.3435 4.09745 11.3342 4.05735 11.3169C3.99707 11.2917 3.94473\n          11.2483 3.90829 11.1944C3.87184 11.1399 3.85091 11.0762 3.85054 11.0052C3.85072 10.9579 3.86022 10.9141 3.87728\n          10.8736C3.90247 10.8134 3.9459 10.7612 3.99995 10.7246C4.05423 10.6882 4.11798 10.6672 4.18893 10.667C4.23622\n          10.667 4.28003 10.6766 4.32032 10.6936C4.38079 10.719 4.43272 10.7622 4.46938 10.8165C4.50583 10.8708 4.52694\n          10.9343 4.52694 11.0053C4.52699 11.0527 4.51766 11.0966 4.50062 11.1368Z\"\n          fill={pathFill}\n        />\n        <path\n          d={\n            'M3.95443 9.20724C3.86373 9.20724 3.77884 9.189 3.70093 9.15623C3.58466 9.10702 3.48425 ' +\n            '9.02405 3.41408 8.91977C3.34663 8.81956 3.30671 8.70155 3.3036 8.57208C3.30709 8.4176 ' +\n            '3.35633 8.28349 3.44277 8.17629C3.48756 8.12107 3.54278 8.0726 3.60983 8.03248C3.67611 ' +\n            '7.99294 3.75423 7.96156 3.84592 7.94177L9.57245 7.00971C9.9467 6.94866 10.2442 6.6626 ' +\n            '10.3198 6.29102L11.0203 2.84747V2.84709C11.0284 2.80716 11.0323 2.76645 11.0323 2.72616C11.0323 ' +\n            '2.58698 10.9846 2.45093 10.895 2.34122C10.7797 2.20013 10.6068 2.11814 10.4243 2.11814H2.495L2.22481 ' +\n            '1.18997V1.19016C2.10078 0.775195 1.76042 0.460828 1.33714 0.370125L0.367674 0.162539C0.203705 0.127266 ' +\n            '0.0420336 0.231938 0.00678359 0.396094C-0.0283023 0.56025 0.0761586 0.721899 0.240526 0.756985L1.20962 ' +\n            '0.964758C1.41601 1.00894 1.58192 1.16205 1.64221 1.36441L3.41371 7.44949C3.37379 7.4681 3.33521 7.48826 ' +\n            '3.29821 7.51055C3.1071 7.62434 2.95398 7.78404 2.85125 7.97049C2.753 8.14763 2.70085 8.34844 2.696 ' +\n            '8.55563H2.69502V8.5872H2.69579C2.69968 8.74906 2.73418 8.90431 2.79406 9.04599C2.89002 9.27256 3.04932 ' +\n            '9.46425 3.25011 9.59991C3.4509 9.73575 3.69472 9.81541 3.95443 9.81523H7.17163C7.17064 9.7852 7.16717 ' +\n            '9.75593 7.16717 9.7257C7.16717 9.54835 7.18538 9.37526 7.21815 9.20724H3.95443ZM8.28413 3.16263C8.45488 ' +\n            '3.11302 8.63356 3.2107 8.68318 3.38145L9.33556 5.61441C9.38518 5.78517 9.28728 5.96367 9.11656 6.01366C8.94599 ' +\n            '6.06349 8.7673 5.96562 8.71749 5.79485L8.06527 3.56187C8.01549 3.39134 8.11337 3.21265 8.28413 3.16263ZM6.87643 ' +\n            '3.16845C7.04699 3.11843 7.2257 3.21631 7.27548 3.38707L7.99009 5.83418C8.0401 6.00476 7.94202 6.18363 7.77146 ' +\n            '6.23346C7.60091 6.28324 7.4222 6.18539 7.37218 6.01463L6.65757 3.56747C6.60781 3.39696 6.70567 3.21806 6.87643 ' +\n            '3.16845ZM5.46835 3.17348C5.6391 3.12387 5.81781 3.22174 5.8674 3.39248L6.64074 6.04022C6.69074 6.21099 6.59267 ' +\n            '6.38967 6.42212 6.43948C6.25159 6.48931 6.07288 6.39143 6.02286 6.22066L5.24952 3.57274C5.19971 3.40219 5.29759 ' +\n            '3.22348 5.46835 3.17348ZM4.06046 3.17911C4.23123 3.12928 4.40992 3.22718 4.45972 3.39795L5.29332 6.25249C5.34334 ' +\n            '6.42324 5.24525 6.60213 5.0747 6.65175C4.90414 6.70174 4.72543 6.60368 4.67542 6.43313L3.84163 3.5782C3.79203 ' +\n            '3.40763 3.88972 3.22891 4.06046 3.17911Z'\n          }\n          fill={pathFill}\n        />\n        <path\n          d={\n            'M9.88112 7.60687C8.71086 7.60687 7.7627 8.55541 7.7627 9.72569C7.7627 10.8958 8.71086 11.8443 9.88112 ' +\n            '11.8443C11.0514 11.8443 11.9999 10.8958 11.9999 9.72569C11.9999 8.55541 11.0514 7.60687 9.88112 7.60687ZM11.0917 ' +\n            '10.0788H8.67055V9.37235H11.0917V10.0788Z'\n          }\n          fill={pathFill}\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_330_2887\">\n          <rect width=\"12\" height=\"12\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  )\n}\n\nexport function LeafIcn({ pathFill = '#000000', size = 12 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} viewBox=\"0 0 64 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_272_720)\">\n        <path\n          d={\n            'M36 0C20.535 0 7.99999 12.535 7.99999 28V50.344L1.17199 57.172C-0.390012 58.734 -0.390012 61.266 1.17199 ' +\n            '62.828C1.95299 63.609 2.97699 64 3.99999 64C5.02299 64 6.04699 63.609 6.82799 62.828L13.656 56H36C51.465 ' +\n            '56 64 43.465 64 28V0H36ZM50.828 18.828L37.652 32.004H44C46.211 32.004 48 33.793 48 36.004C48 38.215 46.211 ' +\n            '40.004 44 40.004H29.652L26.828 42.828C26.047 43.609 25.023 44 24 44C22.977 44 21.953 43.609 21.172 42.828C19.61 ' +\n            '41.266 19.61 38.734 21.172 37.172L24 34.344V20C24 17.789 25.789 16 28 16C30.211 16 32 17.789 32 20V26.344L45.172 ' +\n            '13.172C46.734 11.61 49.266 11.61 50.828 13.172C52.39 14.734 52.391 17.266 50.828 18.828Z'\n          }\n          fill={pathFill}\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_272_720\">\n          <rect width=\"64\" height=\"64\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  )\n}\n\nexport function MoleculeIcn({ pathFill = '#000000', size = 16 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_272_728)\">\n        <path\n          d={\n            'M13.0175 6.62908V2.71094C13.0175 2.44654 12.878 2.20418 12.654 2.06832L9.38578 0.107409C9.14709 -0.0358031 8.85332 ' +\n            '-0.0358031 8.61464 0.107409L5.34279 2.06832C5.11512 2.20418 4.97925 2.44654 4.97925 2.71094V6.62908C4.97925 6.89347 ' +\n            '5.11879 7.13583 5.34279 7.27169L8.61464 9.2326C8.95982 9.43089 9.24624 9.3244 9.38578 9.2326L12.654 7.27169C12.878 ' +\n            '7.13583 13.0175 6.89347 13.0175 6.62908Z'\n          }\n          fill={pathFill}\n        />\n        <path\n          d={\n            'M7.67471 10.7235L4.40653 8.76256C4.16784 8.61935 3.87408 8.61935 3.63539 8.76256L0.363539 10.7235C0.135868 10.8593 ' +\n            '0 11.1017 0 11.3661V15.2842C0 15.5486 0.13954 15.791 0.363539 15.9268L3.63539 17.8878C3.98057 18.086 4.26699 17.9796 ' +\n            '4.40653 17.8878L7.67471 15.9268C7.90238 15.791 8.03825 15.5486 8.03825 15.2842V11.3661C8.03825 11.1017 7.90238 ' +\n            '10.8593 7.67471 10.7235Z'\n          }\n          fill={pathFill}\n        />\n        <path\n          d={\n            'M17.6298 10.7198L14.3616 8.7589C14.1229 8.61569 13.8292 8.61569 13.5905 8.7589L10.3186 10.7198C10.0909 10.8557 ' +\n            '9.95508 11.098 9.95508 11.3624V15.2806C9.95508 15.545 10.0946 15.7873 10.3186 15.9232L13.5868 17.8841C13.932 ' +\n            '18.0824 14.2184 17.9759 14.3579 17.8841L17.6261 15.9232C17.8538 15.7873 17.9897 15.545 17.9897 15.2806V11.3624C17.9933 ' +\n            '11.098 17.8538 10.8557 17.6298 10.7198Z'\n          }\n          fill={pathFill}\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_272_728\">\n          <rect width=\"18\" height=\"18\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  )\n}\n\nexport function SearchIcn({ pathFill = '#574954', size = 20 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <mask id=\"mask0_16_247\" style={{ maskType: 'alpha' }} maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"20\" height=\"20\">\n        <rect width=\"20\" height=\"20\" fill=\"#D9D9D9\" />\n      </mask>\n      <g mask=\"url(#mask0_16_247)\">\n        <path\n          d={\n            'M16.3333 17.5L11.0833 12.25C10.6667 12.5833 10.1875 12.8472 9.64583 13.0417C9.10417 13.2361 ' +\n            '8.52778 13.3333 7.91667 13.3333C6.40278 13.3333 5.12153 12.809 4.07292 11.7604C3.02431 10.7118 ' +\n            '2.5 9.43056 2.5 7.91667C2.5 6.40278 3.02431 5.12153 4.07292 4.07292C5.12153 3.02431 6.40278 2.5 7.91667 ' +\n            '2.5C9.43056 2.5 10.7118 3.02431 11.7604 4.07292C12.809 5.12153 13.3333 6.40278 13.3333 ' +\n            '7.91667C13.3333 8.52778 13.2361 9.10417 13.0417 9.64583C12.8472 10.1875 12.5833 10.6667 12.25 ' +\n            '11.0833L17.5 16.3333L16.3333 17.5ZM7.91667 11.6667C8.95833 11.6667 9.84375 11.3021 10.5729 ' +\n            '10.5729C11.3021 9.84375 11.6667 8.95833 11.6667 7.91667C11.6667 6.875 11.3021 5.98958 10.5729 ' +\n            '5.26042C9.84375 4.53125 8.95833 4.16667 7.91667 4.16667C6.875 4.16667 5.98958 4.53125 5.26042 ' +\n            '5.26042C4.53125 5.98958 4.16667 6.875 4.16667 7.91667C4.16667 8.95833 4.53125 9.84375 5.26042 ' +\n            '10.5729C5.98958 11.3021 6.875 11.6667 7.91667 11.6667Z'\n          }\n          fill={pathFill}\n        />\n      </g>\n    </svg>\n  )\n}\n\nexport function PillsBottleIcn({ pathFill = '#EF762F', size = 16 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_165_1782)\">\n        <path\n          d={\n            'M7.8751 4.34052C7.86877 4.11591 7.75782 3.91751 7.58907 3.79252C7.40655 3.62106 7.2094 ' +\n            '3.46818 7.01846 3.26338C6.98683 3.22948 6.96046 3.19954 6.93778 3.17205C6.93517 3.16894 ' +\n            '6.93256 3.1658 6.92996 3.16263C6.92681 3.1587 6.92397 3.155 6.92093 3.15118L6.91757 ' +\n            '3.14688C6.82224 3.02447 6.81289 2.95561 6.81289 2.83826C6.81289 2.77897 6.81289 2.65316 ' +\n            '6.81289 2.52272H6.9662C7.18556 2.52272 7.3634 2.36418 7.3634 2.16861V1.35413C7.3634 1.15854 ' +\n            '7.18557 1 6.9662 1H3.03366C2.81429 1 2.63645 1.15854 2.63645 1.35413V2.16859C2.63645 2.36416 ' +\n            '2.81429 2.5227 3.03366 2.5227H3.18697C3.18697 2.65314 3.18697 2.77896 3.18697 2.83824C3.18697 ' +\n            '2.95559 3.17762 3.02446 3.08227 3.14687L3.07893 3.15116C3.07589 3.15498 3.07308 3.1587 3.06991 ' +\n            '3.16261C3.06734 3.16578 3.06474 3.16891 3.06208 3.17203C3.0394 3.19952 3.01303 3.22948 2.98144 ' +\n            '3.26336C2.79046 3.46817 2.59332 3.62099 2.41079 3.79246C2.24204 3.91746 2.13109 4.11591 ' +\n            '2.12476 4.34051C2.12476 4.34635 2.12427 4.35356 2.12427 4.36032C2.12427 4.86656 2.12427 ' +\n            '7.86047 2.12427 8.24009C2.12427 8.62504 2.40714 9 2.88414 9C3.12245 9 3.82162 9 4.98483 ' +\n            '9C4.98483 9 4.9887 9 4.99588 9H4.99991H5.00395C5.01113 9 5.015 9 5.015 9C6.17819 9 6.87738 ' +\n            '9 7.11569 9C7.59269 9 7.87556 8.62504 7.87556 8.24009C7.87556 7.86047 7.87556 4.8673 7.87556 ' +\n            '4.36108C7.87556 4.35432 7.8751 4.34637 7.8751 4.34052ZM7.08025 6.21274C7.08025 6.43213 ' +\n            '6.90241 6.60997 6.68304 6.60997H4.99995H3.31686C3.0975 6.60997 2.91965 6.43213 2.91965 ' +\n            '6.21274V5.5681C2.91965 5.34872 3.0975 5.17088 3.31686 5.17088H6.68304C6.90241 5.17088 ' +\n            '7.08025 5.34874 7.08025 5.5681V6.21274Z'\n          }\n          fill={pathFill}\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_165_1782\">\n          <rect width=\"8\" height=\"8\" fill=\"white\" transform=\"translate(1 1)\" />\n        </clipPath>\n      </defs>\n    </svg>\n  )\n}\n\nexport function PrescriptionIcn({ pathFill = '#EF762F', size = 16 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d={\n          'M7.29275 4.90649C7.3391 4.88707 7.37877 4.85455 7.40691 4.81291C7.43504 4.77127 7.45041 ' +\n          '4.72233 7.45113 4.67208V1.00699C7.45113 0.804093 7.37053 0.609509 7.22707 0.466041C7.0836 ' +\n          '0.322573 6.88902 0.241974 6.68612 0.241974H1.76185C1.66159 0.242182 1.56236 0.262134 ' +\n          '1.46982 0.300692C1.37727 0.33925 1.29323 0.395658 1.22248 0.466697C1.15174 0.537735 1.09568 ' +\n          '0.622011 1.05751 0.714714C1.01933 0.807417 0.999793 0.906732 1 1.00699V7.43278C0.999793 ' +\n          '7.53316 1.01939 7.63261 1.05766 7.72541C1.09593 7.81822 1.15213 7.90257 1.22304 7.97363C1.29396 ' +\n          '8.04468 1.37819 8.10106 1.47091 8.13952C1.56364 8.17799 1.66304 8.19779 1.76343 8.19779H4.26596C4.31409 ' +\n          '8.19765 4.3612 8.18389 4.40184 8.1581C4.44248 8.13232 4.47499 8.09556 4.49562 8.05207C4.56793 7.92463 ' +\n          '4.6563 7.80699 4.75854 7.70203L6.65919 5.44501C6.82535 5.21842 7.04235 5.03397 7.29275 4.90649ZM1.8252 ' +\n          '2.42297C1.8252 2.39136 1.83143 2.36005 1.84353 2.33084C1.85563 2.30163 1.87336 2.27509 1.89572 2.25274C1.91807 ' +\n          '2.23038 1.94461 2.21265 1.97382 2.20055C2.00303 2.18845 2.03434 2.18222 2.06595 2.18222H2.54903V1.70706C2.55069 ' +\n          '1.64431 2.57678 1.58469 2.62175 1.54091C2.66672 1.49712 2.72701 1.47262 2.78978 1.47265H3.03053C3.09453 1.47306 ' +\n          '3.15576 1.49878 3.20086 1.54418C3.24597 1.58958 3.27128 1.65098 3.27128 1.71498V2.18222H3.74644C3.81046 2.18304 ' +\n          '3.87162 2.20884 3.91689 2.25411C3.96216 2.29938 3.98796 2.36054 3.98878 2.42456V2.66531C3.98756 2.7292 3.96164 ' +\n          '2.79013 3.91645 2.83531C3.87127 2.8805 3.81033 2.90642 3.74644 2.90764H3.27128V3.39389C3.27128 3.45774 3.24592 ' +\n          '3.51898 3.20077 3.56412C3.15562 3.60927 3.09438 3.63464 3.03053 3.63464H2.7882C2.72462 3.63422 2.66379 3.60867 ' +\n          '2.61899 3.56357C2.57418 3.51846 2.54903 3.45747 2.54903 3.39389V2.91873H2.06595C2.03434 2.91873 2.00303 2.9125 ' +\n          '1.97382 2.9004C1.94461 2.8883 1.91807 2.87057 1.89572 2.84821C1.87336 2.82586 1.85563 2.79932 1.84353 2.77011C1.83143 ' +\n          '2.7409 1.8252 2.70959 1.8252 2.67798V2.42297ZM4.85199 6.30506C4.85199 6.37269 4.82512 6.43755 4.7773 6.48537C4.72948 ' +\n          '6.53319 4.66462 6.56006 4.59699 6.56006H2.08021C2.01257 6.56006 1.94771 6.53319 1.89989 6.48537C1.85207 6.43755 ' +\n          '1.8252 6.37269 1.8252 6.30506V6.02471C1.82562 5.95735 1.85267 5.8929 1.90045 5.84542C1.94823 5.79794 2.01285 ' +\n          '5.77129 2.08021 5.77129H4.59699C4.66434 5.77129 4.72897 5.79794 4.77674 5.84542C4.82452 5.8929 4.85157 5.95735 ' +\n          '4.85199 6.02471V6.30506ZM6.13493 4.75127C6.13535 4.78502 6.12906 4.81853 6.11644 4.84983C6.10381 4.88114 6.08509 ' +\n          '4.90962 6.06137 4.93364C6.03765 4.95765 6.0094 4.97672 5.97825 4.98973C5.9471 5.00275 5.91368 5.00945 5.87993 ' +\n          '5.00944H2.07862C2.01099 5.00944 1.94613 4.98258 1.89831 4.93475C1.85048 4.88693 1.82362 4.82207 1.82362 ' +\n          '4.75444V4.47568C1.8232 4.44179 1.82953 4.40816 1.84226 4.37675C1.85498 4.34534 1.87384 4.31678 1.89773 4.29274C1.92162 ' +\n          '4.26871 1.95006 4.24967 1.98139 4.23676C2.01273 4.22384 2.04632 4.21729 2.08021 4.21751H5.88151C5.94914 4.21751 6.014 ' +\n          '4.24437 6.06183 4.29219C6.10965 4.34002 6.13652 4.40488 6.13652 4.47251L6.13493 4.75127Z'\n        }\n        fill={pathFill}\n      />\n      <path\n        d={\n          'M8.66256 5.60659C8.45267 5.42295 8.17908 5.32902 7.90065 5.34502C7.62222 5.36101 7.36119 5.48565 7.17371 5.69212C7.1623 ' +\n          '5.70461 7.15171 5.71783 7.14204 5.73171L6.3501 6.66303L7.93397 8.01091L8.72591 7.07959C8.91253 6.87571 9.01067 6.60613 ' +\n          '8.99879 6.32999C8.98692 6.05385 8.866 5.79369 8.66256 5.60659Z'\n        }\n        fill={pathFill}\n      />\n      <path\n        d={\n          'M6.01441 7.08432L5.22247 8.01564C5.03848 8.22421 4.94488 8.49732 4.96226 8.7749C4.97963 9.05248 5.10656 9.31178 5.31513 ' +\n          '9.49577C5.52369 9.67976 5.79681 9.77337 6.07439 9.75599C6.35197 9.73861 6.61127 9.61168 6.79526 9.40312L6.82852 9.36352L7.62046 ' +\n          '8.4322L6.03659 7.08432H6.01441Z'\n        }\n        fill={pathFill}\n      />\n    </svg>\n  )\n}\n\nexport function SolidPillIcn({ pathFill = '#EF762F', size = 16 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} viewBox=\"0 0 64 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_272_714)\">\n        <path\n          d=\"M48.973 43.316L58.297 34L58.277 33.98C61.809 30.375 64 25.445 64 20C64 8.953 55.047 0 44 0C38.551 0 33.625 2.191 30.02 5.723L30 5.703L20.684 15.027L48.973 43.316Z\"\n          fill={pathFill}\n        />\n        <path d=\"M15.027 20.684L5.879 29.84C2.25 33.461 0 38.465 0 44C0 55.047 8.953 64 20 64C25.535 64 30.539 61.75 34.16 58.121L43.316 48.973L15.027 20.684Z\" fill={pathFill} />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_272_714\">\n          <rect width=\"64\" height=\"64\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  )\n}\n\nexport function StartOfCommercialisationIcn({ pathFill = '#09853D', size = 16 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_330_3094)\">\n        <path\n          d={\n            'M4.65803 10.3099C4.52448 10.2196 4.36187 10.1663 4.18897 10.1665C4.07385 10.1665 3.96278 10.1899 3.86218 10.2326C3.71139 ' +\n            '10.2964 3.58384 10.4024 3.49335 10.5363C3.40283 10.6698 3.34991 10.8325 3.3501 11.0054C3.34991 11.1205 3.37337 11.2316 ' +\n            '3.41601 11.3319C3.47997 11.4829 3.58579 11.6105 3.71952 11.7008C3.85326 11.7915 4.01608 11.8444 4.18897 11.8444C4.3041 ' +\n            '11.8444 4.41496 11.8209 4.51536 11.7783C4.66635 11.7145 4.79408 11.6083 4.88441 11.4746C4.97474 11.341 5.02783 11.1782 5.02783 ' +\n            '11.0053C5.02783 10.8902 5.00418 10.7793 4.96173 10.6788C4.89796 10.5278 4.79176 10.4002 4.65803 10.3099ZM4.50062 11.1369C4.47503 ' +\n            '11.1974 4.43181 11.2496 4.37772 11.286C4.32346 11.3224 4.25987 11.3436 4.18895 11.3437C4.14147 11.3436 4.09745 11.3343 4.05735 ' +\n            '11.317C3.99707 11.2918 3.94473 11.2484 3.90829 11.1945C3.87184 11.14 3.85091 11.0763 3.85054 11.0053C3.85075 10.958 3.86024 ' +\n            '10.9142 3.8773 10.8737C3.9025 10.8134 3.94593 10.7613 3.99997 10.7247C4.05426 10.6882 4.11803 10.6673 4.18895 10.6671C4.23625 ' +\n            '10.6671 4.28005 10.6766 4.32036 10.6937C4.38083 10.719 4.43277 10.7623 4.46943 10.8165C4.50587 10.8708 4.52699 10.9344 4.52699 ' +\n            '11.0053C4.52699 11.0528 4.51768 11.0966 4.50062 11.1369Z'\n          }\n          fill={pathFill}\n        />\n        <path\n          d={\n            'M3.9545 9.20728C3.8638 9.20728 3.77891 9.18907 3.701 9.15631C3.58471 9.10709 3.4843 9.02412 3.41415 8.91985C3.3467 8.81965 ' +\n            '3.30676 8.7016 3.30367 8.57215C3.30716 8.41765 3.3564 8.28354 3.44284 8.17636C3.4876 8.12112 3.54285 8.07267 3.6099 ' +\n            '8.03255C3.67618 7.99301 3.75428 7.96163 3.84599 7.94185L9.57261 7.00976C9.94686 6.94871 10.2444 6.66263 10.32 6.29107L11.0205 ' +\n            '2.84745V2.84707C11.0286 2.80714 11.0325 2.76645 11.0325 2.72614C11.0325 2.58696 10.9848 2.45091 10.8952 2.3412C10.7799 2.2001 ' +\n            '10.607 2.11812 10.4245 2.11812H2.49505L2.22486 1.1899V1.19009C2.10081 0.775128 1.76045 0.460738 1.33714 0.370035L0.367674 ' +\n            '0.162449C0.203705 0.127175 0.0420336 0.231824 0.00678359 0.396003C-0.0283023 0.56016 0.0761586 0.721808 0.240526 0.756894L1.20964 ' +\n            '0.964667C1.41606 1.00885 1.58195 1.16196 1.64223 1.36432L3.41375 7.44949C3.37384 7.4681 3.33526 7.48826 3.29825 7.51055C3.10714 ' +\n            '7.62434 2.95403 7.78404 2.8513 7.97049C2.75305 8.14765 2.7009 8.34844 2.69605 8.55565H2.69506V8.58722H2.69584C2.69973 8.74908 ' +\n            '2.73423 8.90433 2.79411 9.04601C2.89006 9.27258 3.04937 9.46428 3.25016 9.59993C3.45095 9.73578 3.69477 9.81546 3.9545 ' +\n            '9.81525H7.17174C7.17076 9.78523 7.16729 9.75596 7.16729 9.72572C7.16729 9.54837 7.1855 9.37528 7.21827 9.20724H3.9545V9.20728ZM8.28428 ' +\n            '3.16259C8.45502 3.11297 8.63373 3.21066 8.68335 3.3814L9.33575 5.61441C9.38537 5.78517 9.28749 5.96368 9.11675 6.01367C8.94617 ' +\n            '6.0635 8.76749 5.96562 8.71768 5.79485L8.06546 3.56185C8.01561 3.39129 8.11351 3.2126 8.28428 3.16259ZM6.87655 3.1684C7.04713 ' +\n            '3.11839 7.22581 3.21626 7.27562 3.38703L7.99023 5.83418C8.04024 6.00476 7.94216 6.18366 7.7716 6.23346C7.60103 6.28327 7.42234 ' +\n            '6.18539 7.37232 6.01463L6.65771 3.56745C6.60791 3.39694 6.70578 3.21802 6.87655 3.1684ZM5.46845 3.17344C5.63919 3.12382 5.8179 ' +\n            '3.2217 5.86752 3.39244L6.64086 6.04022C6.69085 6.21099 6.59279 6.3897 6.42224 6.43948C6.25168 6.48931 6.07297 6.39143 6.02296 ' +\n            '6.22067L5.24961 3.5727C5.19978 3.40214 5.29768 3.22346 5.46845 3.17344ZM4.06053 3.17907C4.2313 3.12924 4.41001 3.22714 4.45981 ' +\n            '3.3979L5.29344 6.2525C5.34346 6.42324 5.24537 6.60214 5.07481 6.65178C4.90424 6.70177 4.72555 6.60371 4.67553 6.43315L3.84172 ' +\n            '3.57818C3.79208 3.40758 3.88977 3.22889 4.06053 3.17907Z'\n          }\n          fill={pathFill}\n        />\n        <path\n          d={\n            'M9.88135 7.6069C8.71107 7.6069 7.7627 8.55547 7.7627 9.72575C7.7627 10.8958 8.71107 11.8444 9.88135 11.8444C11.0514 11.8444 ' +\n            '12 10.8958 12 9.72575C12 8.55547 11.0514 7.6069 9.88135 7.6069ZM9.76121 10.7154L8.74831 9.90502L9.13266 9.42455L9.6583 ' +\n            '9.84514L10.5439 8.70664L11.0298 9.0844L9.76121 10.7154Z'\n          }\n          fill={pathFill}\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_330_3094\">\n          <rect width=\"12\" height=\"12\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  )\n}\n\nexport function SupplyIcn({ pathFill = '#EF762F', size = 16 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_329_708)\">\n        <path\n          d={\n            'M5.18757 9.96101C4.45959 9.96101 3.86963 10.5508 3.86963 11.2788C3.86963 12.0069 4.45959 12.5966 5.18757 ' +\n            '12.5966C5.91581 12.5966 6.50562 12.0069 6.50562 11.2788C6.50562 10.5508 5.91581 9.96101 5.18757 9.96101ZM5.18757 ' +\n            '11.8517C4.87111 11.8517 4.61468 11.5953 4.61468 11.2788C4.61468 10.9622 4.87111 10.7059 5.18757 10.7059C5.50406 ' +\n            '10.7059 5.76067 10.9622 5.76067 11.2788C5.76067 11.5953 5.50406 11.8517 5.18757 11.8517Z'\n          }\n          fill={pathFill}\n        />\n        <path\n          d={\n            'M12.1372 9.96101C11.4093 9.96101 10.8193 10.5508 10.8193 11.2788C10.8193 12.0069 11.4093 12.5966 12.1372 ' +\n            '12.5966C12.8655 12.5966 13.4553 12.0069 13.4553 11.2788C13.4553 10.5508 12.8655 9.96101 12.1372 9.96101ZM12.1372 ' +\n            '11.8517C11.8208 11.8517 11.5644 11.5953 11.5644 11.2788C11.5644 10.9622 11.8208 10.7059 12.1372 10.7059C12.4538 ' +\n            '10.7059 12.7104 10.9622 12.7104 11.2788C12.7104 11.5953 12.4538 11.8517 12.1372 11.8517Z'\n          }\n          fill={pathFill}\n        />\n        <path\n          d={\n            'M6.6703 5.9117C6.6703 6.09636 6.51918 6.24744 6.33455 6.24744H1.70143C1.51676 6.24744 1.36572 6.09636 1.36572 ' +\n            '5.9117V5.71025C1.36572 5.52562 1.5168 5.37454 1.70143 5.37454H6.33455C6.51922 5.37454 6.6703 5.52562 6.6703 5.71025V5.9117Z'\n          }\n          fill={pathFill}\n        />\n        <path\n          d={\n            'M14.7198 7.87737C14.2365 7.75174 13.96 7.67276 13.7703 7.30629L13.1358 6.02162C12.9459 5.65516 12.4529 5.35529 12.0403 ' +\n            '5.35529H11.1725C11.1725 5.35529 11.0557 5.35773 11.0557 5.24024C11.0557 4.97087 11.0557 4.1628 11.0557 4.1628C11.0557 ' +\n            '3.74512 10.8194 3.40337 10.3166 3.40337H3.24371C2.52388 3.40337 2.18213 3.74516 2.18213 4.1628V4.83801C2.18213 4.83801 ' +\n            '2.18213 5.03883 2.3765 5.03883C3.36599 5.03883 6.33452 5.03883 6.33452 5.03883C6.70477 5.03883 7.006 5.34003 7.006 ' +\n            '5.71028V5.91173C7.006 6.28199 6.70477 6.58318 6.33452 6.58318H2.3765C2.3765 6.58318 2.18213 6.56703 2.18213 6.77685C2.18213 ' +\n            '6.88106 2.18213 6.95101 2.18213 7.00905C2.18213 7.19372 2.43524 7.19361 2.43524 7.19361H5.09958C5.46984 7.19361 5.77107 ' +\n            '7.49483 5.77107 7.86506V8.0665C5.77107 8.43676 5.46984 8.73795 5.09958 8.73795H2.47727C2.47727 8.73795 2.18213 8.7325 ' +\n            '2.18213 8.9675C2.18213 9.37541 2.18213 10.5991 2.18213 10.5991C2.18213 11.0167 2.52388 11.3585 2.94156 11.3585C2.94156 ' +\n            '11.3585 3.25618 11.3585 3.36105 11.3585C3.45619 11.3585 3.4702 11.3055 3.4702 11.2789C3.4702 10.332 4.24066 9.5617 5.1876 ' +\n            '9.5617C6.13462 9.5617 6.90504 10.332 6.90504 11.2789C6.90504 11.3056 6.89744 11.3585 6.9702 11.3585C7.80172 11.3585 10.3555 ' +\n            '11.3585 10.3555 11.3585C10.4226 11.3585 10.4199 11.3019 10.4199 11.2789C10.4199 10.332 11.1903 9.5617 12.1373 9.5617C13.0843 ' +\n            '9.5617 13.8547 10.332 13.8547 11.2789C13.8547 11.3056 13.854 11.3585 13.896 11.3585C14.2773 11.3585 14.7495 11.3585 14.7495 ' +\n            '11.3585C15.1624 11.3585 15.5 11.0208 15.5 10.6081V9.18233C15.5001 7.98165 15.1209 7.98165 14.7198 7.87737ZM13.2917 7.81059C13.2917 ' +\n            '7.81059 11.6981 7.81059 11.1557 7.81059C11.0674 7.81059 11.0557 7.72468 11.0557 7.72468V5.94529C11.0557 5.94529 11.0507 5.87696 ' +\n            '11.164 5.87696C11.3164 5.87696 11.7735 5.87696 11.7735 5.87696C12.1408 5.87696 12.5794 6.14378 12.7483 6.46987L13.3129 ' +\n            '7.61298C13.3367 7.659 13.3621 7.69986 13.3893 7.73647C13.4094 7.76332 13.3757 7.81059 13.2917 7.81059Z'\n          }\n          fill={pathFill}\n        />\n        <path\n          d={\n            'M5.43524 8.06651C5.43524 8.25118 5.28416 8.40226 5.09953 8.40226H0.835707C0.651039 8.40226 0.5 8.25118 0.5 8.06651V7.86506C0.5 ' +\n            '7.68043 0.651076 7.52936 0.835707 7.52936H5.09953C5.2842 7.52936 5.43524 7.68043 5.43524 7.86506V8.06651Z'\n          }\n          fill={pathFill}\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_329_708\">\n          <rect width=\"15\" height=\"15\" fill=\"white\" transform=\"translate(0.5 0.5)\" />\n        </clipPath>\n      </defs>\n    </svg>\n  )\n}\n","import styled, { css } from 'styled-components'\nimport { colors } from '../../../styles'\nimport { ButtonViewType } from './index'\n\nconst viewStyles = ($view?: ButtonViewType) => {\n  switch ($view) {\n    case 'primary':\n      return css`\n        background: ${colors.blue[800]};\n        color: #ffffff;\n\n        &:hover {\n          opacity: 0.9;\n        }\n      `\n    case 'outlined':\n      return css`\n        border-radius: 6px;\n        border-color: ${colors.grey[550]};\n        background: ${colors.grey[100]};\n        color: ${colors.blue[800]};\n\n        &:hover {\n          border-color: ${colors.blue[800]};\n        }\n      `\n    case 'withSpinner':\n      return css`\n        border-radius: 6px;\n        border-color: ${colors.grey[550]};\n        background: ${colors.grey[100]};\n        color: ${colors.blue[800]};\n        gap: 8px;\n      `\n    default:\n      return null\n  }\n}\n\nexport const StyledButton = styled.button<{ $view?: 'primary' | 'withSpinner' | 'outlined' }>`\n  display: flex;\n  height: 32px;\n  padding: 0 16px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 6px;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  border: 1px solid ${colors.blue[800]};\n  cursor: pointer;\n  min-width: 64px;\n\n  ${({ $view }) => viewStyles($view)}\n  &[disabled],\n  &[disabled]:hover {\n    cursor: not-allowed;\n    border-color: ${colors.grey[550]};\n    background: ${colors.grey[200]};\n    color: ${colors.grey[600]};\n  }\n`\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n  /* Reset of the user agent styles */\n\n  * {\n    margin: 0;\n    padding: 0;\n    font-size: 100%;\n    box-sizing: border-box;\n  }\n  \n  // Links\n  a {\n    text-decoration: none;\n\n    &:active,\n    &:hover {\n      outline: 0;\n    }\n  }\n\n  // List\n  ul,\n  li {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  // Headlines\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-size: 100%;\n  }\n\n  // Default\n  html,\n  body {\n    box-sizing: border-box;\n    font-size: 16px;\n    background-color: #fbfdff;\n    font-family: 'Lato', sans-serif;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n\n  :focus {\n    outline: 0;\n  }\n\n  img,\n  audio,\n  video {\n    max-width: 100%;\n    height: auto;\n  }\n\n  iframe {\n    border: 0;\n  }\n\n  // Form\n  textarea {\n    resize: none;\n    /*remove the resize handle on the bottom right*/\n    overflow: auto;\n    vertical-align: top;\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n\n  input,\n  textarea,\n  select,\n  button {\n    outline: none;\n    border: none;\n    font-size: 100%;\n    margin: 0;\n  }\n\n  button,\n  input {\n    line-height: normal;\n  }\n\n  // browser user agent input reset\n\n  input:-webkit-autofill,\n  input:-webkit-autofill:hover,\n  input:-webkit-autofill:focus,\n  textarea:-webkit-autofill,\n  textarea:-webkit-autofill:hover,\n  textarea:-webkit-autofill:focus,\n  select:-webkit-autofill,\n  select:-webkit-autofill:hover,\n  select:-webkit-autofill:focus {\n    -webkit-text-fill-color: rgb(0, 0, 0);\n    transition: background-color 5000s ease-in-out 0s;\n  }\n\n  // Table\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  td,\n  th {\n    padding: 0;\n    text-align: left;\n  }\n`\n","export const colors = {\n  blue: {\n    800: '#084b83',\n    600: '#4b6682',\n    500: '#3d87c5',\n    300: '#eef6fe',\n    200: '#f9fbfe',\n    100: '#dce7f2',\n  },\n  grey: {\n    900: '#1d2235',\n    650: '#9ca8b2',\n    600: '#848482',\n    550: '#cad0d5',\n    300: '#e4e4e7',\n    200: '#f5f5f5',\n    100: '#fcfcfd',\n  },\n  orange: {\n    900: '#ef762f',\n  },\n  green: {\n    400: '#b7eb8f',\n    300: '#f6ffed',\n    200: '#e5fae5',\n  },\n  red: {\n    800: '#FF0000FF',\n    400: '#ffccc7',\n    300: '#fff1f0',\n  },\n} as const\n","import { css } from 'styled-components'\nimport { colors } from './variables'\n\nexport const fieldCommonStyles = css`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 4px;\n  align-self: stretch;\n`\n\nexport const inputCommonStyles = css`\n  width: 100%;\n  display: flex;\n  height: 32px;\n  padding: 5px 12px;\n  align-items: center;\n  gap: 4px;\n  align-self: stretch;\n  cursor: pointer;\n\n  border-radius: 6px;\n  border: 1px solid ${colors.grey[550]};\n  background: #fff;\n\n  color: ${colors.grey[900]};\n  font-family: 'Inter Variable', sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 22px;\n\n  &::placeholder {\n    color: ${colors.grey[650]};\n  }\n\n  &:hover,\n  &:focus {\n    border-color: ${colors.blue[800]};\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 2px rgba(61, 135, 197, 0.2);\n  }\n`\n\nexport const inputCommonStyles_disabled = css`\n  cursor: not-allowed;\n  background-color: ${colors.grey[200]};\n  border-color: ${colors.grey[550]};\n  opacity: 0.7;\n\n  &:hover {\n    border-color: ${colors.grey[550]};\n  }\n`\n\nexport const inputCommonStyles_error = css`\n  border-color: red;\n  color: red;\n\n  &::placeholder {\n    color: rgba(255, 0, 0, 0.5);\n  }\n\n  &:hover {\n    border-color: rgba(255, 0, 0, 0.5);\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 2px rgba(255, 0, 0, 0.2);\n  }\n`\n\nexport const labelCommonStyles = css`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  gap: 4px;\n  color: ${colors.grey[900]};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 22px;\n  cursor: pointer;\n\n  span {\n    display: none;\n  }\n`\n\nexport const labelCommonStyles_required = css`\n  span {\n    display: flex;\n    color: red;\n    font-weight: bold;\n  }\n`\n\nexport const labelCommonStyles_error = css`\n  color: red;\n`\n\nexport const errorMessageCommonStyles = css`\n  color: red;\n  font-size: 13px;\n`\n","import React from 'react'\nimport { SpinnerIcn } from '../../common/Icons'\nimport { StyledButton } from './styles'\nimport { GlobalStyles } from '../../../styles'\n\nexport type ButtonViewType = 'primary' | 'withSpinner' | 'outlined'\n\ninterface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  title: string\n  view?: ButtonViewType\n  type?: 'button' | 'reset' | 'submit'\n  form?: string\n  disabled?: boolean\n  handleClick?: () => void\n}\n\nexport const Button: React.FC<Props> = ({ title, view = 'primary', handleClick, type = 'button', ...rest }) => (\n  <>\n    <GlobalStyles />\n    <StyledButton $view={view} onClick={handleClick} type={type} {...rest}>\n      {view === 'withSpinner' ? SpinnerIcn({}) : title}\n    </StyledButton>\n  </>\n)\n","// index.tsx\nimport React from 'react'\nimport { StyledRadioButton, StyledRadioButtonLabel, StyledRadioButtonToggle, StyledRadioButtonToggleStuffing, StyledRadioGroupLabel, StyledRadioInput } from './styles'\nimport { GlobalStyles } from '../../../styles'\n\nexport interface RadioOption {\n  label: string\n  value: boolean\n  id: string\n}\n\ninterface RadioInputProps {\n  label: string\n  name: string\n  options: RadioOption[]\n  required?: boolean\n  errorMessage?: string\n  onChange?: (value: boolean) => void\n}\n\nexport const RadioInput: React.FC<RadioInputProps> = ({ label, name, options, required, errorMessage }) => {\n  const [value, setValue] = React.useState(false)\n  return (\n    <>\n      <GlobalStyles />\n      <StyledRadioInput>\n        <StyledRadioGroupLabel $required={required} $error={!!errorMessage}>\n          <span>*</span>\n          {label}\n        </StyledRadioGroupLabel>\n        <div className=\"radioBtnsGroup\">\n          {options.map((option) => (\n            <StyledRadioButton key={option.id} htmlFor={option.id} $error={!!errorMessage}>\n              <input\n                id={option.id}\n                name={name}\n                type=\"radio\"\n                checked={value === option.value}\n                value={String(option.value)}\n                required={required}\n                onChange={() => setValue(option.value)}\n              />\n              <StyledRadioButtonToggle $error={!!errorMessage}>\n                <StyledRadioButtonToggleStuffing />\n              </StyledRadioButtonToggle>\n              <StyledRadioButtonLabel $error={!!errorMessage}>{option.label}</StyledRadioButtonLabel>\n            </StyledRadioButton>\n          ))}\n        </div>\n        {!!errorMessage && <p className=\"error\">{errorMessage}</p>}\n      </StyledRadioInput>\n    </>\n  )\n}\n","import styled, { css } from 'styled-components'\nimport { colors, errorMessageCommonStyles, fieldCommonStyles, labelCommonStyles, labelCommonStyles_error, labelCommonStyles_required } from '../../../styles'\n\nexport const StyledRadioGroupLabel = styled.p<{ $required?: boolean; $error?: boolean }>`\n  ${labelCommonStyles};\n  ${({ $error }) =>\n    !!$error &&\n    css`\n      ${labelCommonStyles_error}\n    `};\n  ${({ $required }) =>\n    !!$required &&\n    css`\n      ${labelCommonStyles_required}\n    `};\n`\n\nexport const StyledRadioButtonToggleStuffing = styled.span`\n  display: none;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background: ${colors.blue[800]};\n`\n\nexport const StyledRadioButtonToggle = styled.span<{ $error?: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 15px;\n  height: 15px;\n  padding: 2px;\n  border-radius: 50%;\n  border: 1px solid ${colors.grey[600]};\n  background: #fff;\n\n  ${({ $error }) =>\n    !!$error &&\n    css`\n      border-color: red;\n\n      &:hover {\n        box-shadow: 0 0 0 2px rgba(255, 0, 0, 0.2);\n      }\n\n      ${StyledRadioButtonToggleStuffing} {\n        background: red;\n      }\n    `}\n`\nexport const StyledRadioButtonLabel = styled.span<{ $error?: boolean }>`\n  ${labelCommonStyles};\n\n  ${({ $error }) =>\n    !!$error &&\n    css`\n      ${labelCommonStyles_error}\n    `}\n\n  width: auto;\n  font-weight: 400;\n`\n\nexport const StyledRadioButton = styled.label<{ $error?: boolean }>`\n  align-self: stretch;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 8px;\n  cursor: pointer;\n\n  &:hover {\n    ${StyledRadioButtonToggle} {\n      box-shadow: 0 0 0 2px rgba(61, 135, 197, 0.2);\n      border-color: ${colors.blue[800]};\n    }\n  }\n\n  input {\n    display: none;\n\n    &:checked + ${StyledRadioButtonToggle} {\n      border-color: ${colors.blue[800]};\n\n      ${StyledRadioButtonToggleStuffing} {\n        display: flex;\n      }\n    }\n  }\n\n  ${({ $error }) =>\n    !!$error &&\n    css`\n      &:hover {\n        ${StyledRadioButtonToggle} {\n          box-shadow: 0 0 0 2px rgba(255, 0, 0, 0.2);\n          border-color: red;\n        }\n      }\n\n      input {\n        display: none;\n\n        &:checked + ${StyledRadioButtonToggle} {\n          border-color: red;\n\n          ${StyledRadioButtonToggleStuffing} {\n            display: flex;\n          }\n        }\n      }\n    `}\n`\n\nexport const StyledRadioInput = styled.div`\n  ${fieldCommonStyles};\n\n  .radioBtnsGroup {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 18px;\n  }\n\n  .error {\n    ${errorMessageCommonStyles}\n  }\n`\n","import styled, { css } from 'styled-components'\nimport {\n  errorMessageCommonStyles,\n  fieldCommonStyles,\n  inputCommonStyles,\n  inputCommonStyles_disabled,\n  inputCommonStyles_error,\n  labelCommonStyles,\n  labelCommonStyles_error,\n  labelCommonStyles_required,\n} from '../../../styles'\n\nexport const StyledSelectInputLabel = styled.label<{ $required?: boolean; $error?: boolean }>`\n  ${labelCommonStyles};\n  ${({ $error }) =>\n    !!$error &&\n    css`\n      ${labelCommonStyles_error}\n    `};\n  ${({ $required }) =>\n    !!$required &&\n    css`\n      ${labelCommonStyles_required}\n    `};\n`\nexport const StyledSelectInput = styled.div`\n  ${fieldCommonStyles};\n\n  .error {\n    ${errorMessageCommonStyles}\n  }\n`\nexport const StyledSelectDropdown = styled.select<{ $disabled?: boolean; $error?: boolean }>`\n  ${inputCommonStyles};\n\n  ${({ $error }) =>\n    !!$error &&\n    css`\n      ${inputCommonStyles_error}\n    `};\n  ${({ $disabled }) =>\n    !!$disabled &&\n    css`\n      ${inputCommonStyles_disabled}\n    `};\n`\n","import React from 'react'\nimport { GlobalStyles } from '../../../styles'\nimport { StyledSelectDropdown, StyledSelectInput, StyledSelectInputLabel } from './styles'\n\nexport interface SelectOption {\n  value: string | null\n  label: string\n}\n\ninterface SelectInputProps {\n  label: string\n  id: string\n  required?: boolean\n  disabled?: boolean\n  options: SelectOption[]\n  value?: string\n  onChange?: (value: string) => void\n  errorMessage?: string\n}\n\nexport const SelectInput: React.FC<SelectInputProps> = ({ label, id, required, disabled, options, value, onChange, errorMessage }) => {\n  return (\n    <>\n      <GlobalStyles />\n      <StyledSelectInput>\n        <StyledSelectInputLabel htmlFor={id} $required={required} $error={!!errorMessage}>\n          <span>*</span>\n          {label}\n        </StyledSelectInputLabel>\n\n        <StyledSelectDropdown $disabled={disabled} $error={!!errorMessage} id={id} name={id} value={value} disabled={disabled} onChange={(e) => onChange(e.target.value)}>\n          {options.map((option) => (\n            <option key={option.value ?? ''} value={option.value ?? ''}>\n              {option.label}\n            </option>\n          ))}\n        </StyledSelectDropdown>\n        {!!errorMessage && <p className=\"error\">{errorMessage}</p>}\n      </StyledSelectInput>\n    </>\n  )\n}\n","import styled, { css } from 'styled-components'\nimport {\n  errorMessageCommonStyles,\n  fieldCommonStyles,\n  inputCommonStyles,\n  inputCommonStyles_disabled,\n  inputCommonStyles_error,\n  labelCommonStyles,\n  labelCommonStyles_error,\n  labelCommonStyles_required,\n} from '../../../styles'\n\nexport const StyledTextareaInputLabel = styled.label<{ $required?: boolean; $error?: boolean }>`\n  ${labelCommonStyles};\n  ${({ $error }) =>\n    !!$error &&\n    css`\n      ${labelCommonStyles_error}\n    `};\n  ${({ $required }) =>\n    !!$required &&\n    css`\n      ${labelCommonStyles_required}\n    `};\n`\nexport const StyledTextareaInput = styled.div`\n  ${fieldCommonStyles};\n\n  .error {\n    ${errorMessageCommonStyles}\n  }\n`\nexport const StyledTextarea = styled.textarea<{ $disabled?: boolean; $error?: boolean }>`\n  ${inputCommonStyles};\n  height: unset;\n\n  ${({ $error }) =>\n    !!$error &&\n    css`\n      ${inputCommonStyles_error}\n    `};\n  ${({ $disabled }) =>\n    !!$disabled &&\n    css`\n      ${inputCommonStyles_disabled}\n    `};\n`\n","import React from 'react'\nimport { GlobalStyles } from '../../../styles'\nimport { StyledTextarea, StyledTextareaInput, StyledTextareaInputLabel } from './styles'\n\ninterface TextareaInputProps {\n  label: string\n  id?: string\n  required?: boolean\n  disabled?: boolean\n  value?: string\n  onChange?: (value: string) => void\n  errorMessage?: string\n}\n\nexport const TextareaInput: React.FC<TextareaInputProps> = ({ label, id, required, disabled, value, onChange, errorMessage }) => {\n  return (\n    <>\n      <GlobalStyles />\n      <StyledTextareaInput>\n        <StyledTextareaInputLabel htmlFor={id} $required={required} $error={!!errorMessage}>\n          <span>*</span>\n          {label}\n        </StyledTextareaInputLabel>\n\n        <StyledTextarea\n          placeholder={label}\n          name={id}\n          id={id}\n          value={value}\n          $disabled={disabled}\n          $error={!!errorMessage}\n          disabled={disabled}\n          rows={3}\n          onChange={(e) => onChange(e.target.value)}\n        />\n        {errorMessage && <p className=\"error\">{errorMessage}</p>}\n      </StyledTextareaInput>\n    </>\n  )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { StyledInput, StyledTextInput, StyledTextInputLabel } from './styles'\n\ninterface Props extends React.InputHTMLAttributes<HTMLInputElement> {\n  label: string\n  id: string\n  required?: boolean\n  disabled?: boolean\n  errorMessage?: string\n  autoFocus?: boolean\n}\n\nexport const TextInput: React.FC<Props> = ({ label, id, required, errorMessage, disabled, autoFocus, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  useEffect(() => {\n    if (autoFocus && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [autoFocus])\n\n  return (\n    <StyledTextInput>\n      <StyledTextInputLabel htmlFor={id} $required={required} $error={!!errorMessage}>\n        <span>*</span>\n        {label}\n      </StyledTextInputLabel>\n      <StyledInput id={id} name={id} ref={inputRef} required={required} placeholder={label} {...rest} $disabled={disabled} $error={!!errorMessage} />\n      {errorMessage && <p className=\"error\">{errorMessage}</p>}\n    </StyledTextInput>\n  )\n}\n","import styled, { css } from 'styled-components'\nimport {\n  errorMessageCommonStyles,\n  fieldCommonStyles,\n  inputCommonStyles,\n  inputCommonStyles_disabled,\n  inputCommonStyles_error,\n  labelCommonStyles,\n  labelCommonStyles_error,\n  labelCommonStyles_required,\n} from '../../../styles'\n\nexport const StyledTextInputLabel = styled.label<{ $required?: boolean; $error?: boolean }>`\n  ${labelCommonStyles};\n  ${({ $error }) =>\n    !!$error &&\n    css`\n      ${labelCommonStyles_error}\n    `};\n  ${({ $required }) =>\n    !!$required &&\n    css`\n      ${labelCommonStyles_required}\n    `};\n`\nexport const StyledTextInput = styled.div`\n  ${fieldCommonStyles};\n\n  .error {\n    ${errorMessageCommonStyles}\n  }\n`\nexport const StyledInput = styled.input<{ $disabled?: boolean; $error?: boolean }>`\n  ${inputCommonStyles};\n\n  &::file-selector-button {\n    border-radius: 0;\n    height: 100%;\n    cursor: pointer;\n    background-color: white;\n    border: none;\n    border-right: 1px solid rgba(0, 0, 0, 0.16);\n    margin-right: 16px;\n    padding-right: 12px;\n    transition: background-color 200ms;\n  }\n\n  ${({ $error }) =>\n    !!$error &&\n    css`\n      ${inputCommonStyles_error}\n    `};\n  ${({ $disabled }) =>\n    !!$disabled &&\n    css`\n      ${inputCommonStyles_disabled}\n    `};\n`\n","import React from 'react'\nimport { StyledSwitch } from './styles'\n\ninterface ToggleSwitchProps {\n  id: string\n  value: string\n  checked: boolean\n  label?: string\n  onChange?: (checked: boolean) => void\n}\n\nexport const ToggleSwitch: React.FC<ToggleSwitchProps> = ({ id, value, checked, label, onChange }) => {\n  const [localChecked, setLocalChecked] = React.useState(checked)\n  const handleChange = (newChecked: boolean) => {\n    setLocalChecked(newChecked)\n    if (onChange) {\n      onChange(newChecked)\n    }\n  }\n\n  return (\n    <StyledSwitch>\n      {label && <p className=\"toggleSwitchLabel\">{label}</p>}\n      <div className=\"toggleWrapper\">\n        <label htmlFor={id} className=\"toggle\">\n          <input id={id} name={id} type=\"checkbox\" checked={localChecked} onChange={(e) => handleChange(e.target.checked)} />\n          <span className=\"slider\"></span>\n        </label>\n        <p>{value}</p>\n      </div>\n    </StyledSwitch>\n  )\n}\n","import styled from 'styled-components'\nimport { colors, fieldCommonStyles, labelCommonStyles } from '../../../styles'\n\nexport const StyledSwitch = styled.div`\n\n  ${fieldCommonStyles};\n\n  .toggleSwitchLabel {\n    ${labelCommonStyles};\n  }\n\n  .toggleWrapper {\n    display: flex;\n    padding: 4px 0;\n    align-items: center;\n    gap: 12px;\n    align-self: stretch;\n\n    .toggle {\n      position: relative;\n      display: inline-block;\n      width: 46px;\n      height: 24px;\n\n      .slider {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: ${colors.grey[550]};\n        border: 1px solid transparent;\n        transition: 0.4s;\n        border-radius: 34px;\n\n        &:hover {\n          border-color: ${colors.blue[800]};\n          box-shadow: 0 0 0 2px rgba(61, 135, 197, 0.2);\n        }\n\n        &::before {\n          position: absolute;\n          content: '';\n          height: 18px;\n          width: 18px;\n          left: 2px;\n          bottom: 2px;\n          background-color: white;\n          transition: 0.4s;\n          border-radius: 50%;\n        }\n      }\n\n      input {\n        opacity: 0;\n        width: 0;\n        height: 0;\n\n        &:checked + .slider {\n          background-color: ${colors.blue[800]};\n        }\n\n        &:checked + .slider:hover {\n          box-shadow: 0 0 0 2px rgba(61, 135, 197, 0.2);\n        }\n\n        &:focus + .slider {\n          box-shadow: 0 0 1px ${colors.blue[800]};\n        }\n\n        &:checked + .slider::before {\n          -webkit-transform: translateX(20px);\n          -ms-transform: translateX(20px);\n          transform: translateX(20px);\n        }\n      }\n    }\n\n    p {\n      ${labelCommonStyles};\n    }\n`\n"],"mappings":"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","names":["import_styled_components","import_styled_components","styled","import_jsx_runtime","import_styled_components","styled","import_jsx_runtime","React","import_styled_components","styled","import_jsx_runtime","import_styled_components","styled","import_jsx_runtime","import_react","import_styled_components","styled","import_jsx_runtime","import_react","import_styled_components","styled","import_jsx_runtime","React"]}