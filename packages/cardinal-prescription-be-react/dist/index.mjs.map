{"version":3,"sources":["../src/services/i18n/index.tsx","../src/services/i18n/translations/components/home.translations.ts","../src/services/i18n/translations/components/prescription.translations.ts","../src/services/i18n/translations/components/medication.translations.ts","../src/services/i18n/translations/components/practitioner.translations.ts","../src/services/i18n/translations/utils/visibility-helpers.translations.ts","../src/services/i18n/translations/utils/reimbursement-helpers.translations.ts","../src/services/i18n/translations/utils/prescription-duration-helpers.translations.ts","../src/services/i18n/translations/utils/delivery-helpers.translations.ts","../src/services/i18n/translations/index.ts","../src/services/constants.ts","../src/services/cardinal-sam/index.ts","../src/services/indexed-db/index.ts","../src/services/certificate/index.ts","../src/services/fhc/index.ts","../src/utils/date-helpers.ts","../src/components/certificate-elements/PractitionerCertificate/index.tsx","../src/components/common/Alert/styles.ts","../src/styles/reset.ts","../src/styles/variables.ts","../src/styles/elements.ts","../src/styles/responsive-media-queries.ts","../src/components/common/Icons/index.tsx","../src/components/common/Alert/index.tsx","../src/components/certificate-elements/CertificateUploadForm/index.tsx","../src/utils/file-helpers.ts","../src/components/form-elements/Button/styles.ts","../src/components/form-elements/Button/index.tsx","../src/components/form-elements/TextInput/index.tsx","../src/components/form-elements/TextInput/styles.ts","../src/components/certificate-elements/CertificateUploadForm/styles.ts","../src/components/certificate-elements/PractitionerCertificate/styles.ts"],"sourcesContent":["import i18n, { i18n as I18nInstance } from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport { SamText } from '@icure/cardinal-be-sam-sdk'\nimport { appTranslations } from './translations'\nimport { DEFAULT_APP_LANGULAGE } from '../constants'\n\nexport type AvailableLanguagesType = SamText['fr'] | SamText['en'] | SamText['nl'] | SamText['de']\n\nexport class I18nService {\n  private static instance: I18nService\n  private i18n: I18nInstance\n\n  private constructor() {\n    this.i18n = i18n\n\n    this.i18n\n      .use(initReactI18next)\n      .init({\n        resources: {\n          en: { translation: appTranslations.en },\n          fr: { translation: appTranslations.fr },\n          nl: { translation: appTranslations.nl },\n          de: { translation: appTranslations.de },\n        },\n        lng: DEFAULT_APP_LANGULAGE,\n        fallbackLng: DEFAULT_APP_LANGULAGE,\n        interpolation: { escapeValue: false },\n      })\n      .catch((error) => {\n        console.error('i18n init error:', error)\n      })\n  }\n\n  // Singleton pattern to avoid multiple initializations\n  public static getInstance(): I18nService {\n    if (!I18nService.instance) {\n      I18nService.instance = new I18nService()\n    }\n    return I18nService.instance\n  }\n\n  public setLanguage(lang: AvailableLanguagesType) {\n    return this.i18n.changeLanguage(lang)\n  }\n\n  public getCurrentLanguage(): string {\n    return this.i18n.language\n  }\n\n  public t(key: string, options?: any) {\n    return this.i18n.t(key, options)\n  }\n}\n","/* eslint-disable max-len */\nexport const homeTranslations = {\n  fr: {\n    samVersionLabel: 'Version Sam :',\n  },\n  en: {\n    samVersionLabel: 'Sam version:',\n  },\n  nl: {\n    samVersionLabel: 'Sam-versie:',\n  },\n  de: {\n    samVersionLabel: 'Sam-version:',\n  },\n}\n","/* eslint-disable max-len */\nexport const prescriptionTranslations = {\n  fr: {\n    createTitle: 'Créer la prescription',\n    modifyTitle: 'Modifier la prescription',\n    pdf: {\n      title: 'PREUVE DE PRESCRIPTION ELECTRONIQUE',\n      instructions: 'Veuillez présenter ce document à votre pharmacien pour scanner le code-barres et vous délivrer les médicaments prescrits.',\n      options: {\n        title: 'De quelles options disposez-vous pour vous rendre à la pharmacie si vous avez perdu ce document ?',\n        option1: 'Via Masanté.be - MyHealthViewer - App MesMédicaments ou toute autre App, vous pouvez montrer votre prescription au pharmacien, qui lira le code-barres.',\n        option2:\n          'Vous pouvez également aller chercher les produits prescrits avec votre eID (ou votre numéro de registre national si votre eID a été lue par le pharmacien qui vous délivre les produits dans les 15 mois précédents).',\n      },\n      prescriber: 'Prescripteur',\n      patient: 'Bénéficiaire',\n      electronicContent: 'Contenu de la prescription électronique:',\n      product: 'Produit:',\n      dosage: 'Posologie:',\n      date: 'Date:',\n      validUntil: \"Date de fin pour l'exécution:\",\n    },\n    list: {\n      sentTitle: 'Ordonnances envoyées:',\n      pendingTitle: 'Ordonnances en attente:',\n      print: 'Imprimer',\n      send: 'Envoyer',\n      sendAndPrint: 'Envoyer et imprimer',\n    },\n    form: {\n      medicationTitle: 'Nom du groupe DCI',\n      dosage: 'Posologie',\n      duration: 'Durée (nombre d’unités)',\n      durationTimeUnit: 'Unité de temps',\n      treatmentStartDate: 'Date début du traitement',\n      executableUntil: 'Exécutable jusqu`au',\n      prescriptionsNumber: 'Nombre de prescriptions',\n      periodicityTimeUnit: 'Périodicité',\n      periodicityDaysNumber: 'Nombre de jours',\n      substitutionAllowed: 'Substitution autorisée',\n      substitutionYes: 'Oui',\n      substitutionNo: 'Non',\n      toggleExtraFields: 'Afficher plus',\n      patientInstructions: 'Instructions pour le patient',\n      reimbursementInstructions: 'Instructions remboursement',\n      prescriberVisibility: 'Visibilité prescripteur',\n      pharmacistVisibility: 'Visibilité officine',\n      cancel: 'Annuler',\n      submit: 'Soumettre',\n      fieldRequired: 'Ce champ est requis',\n      fieldInvalid: 'Champ invalide',\n      instructionLabelNone: 'Aucun',\n    },\n  },\n  en: {\n    createTitle: 'Create prescription',\n    modifyTitle: 'Modify prescription',\n    pdf: {\n      title: 'PROOF OF ELECTRONIC PRESCRIPTION',\n      instructions: 'Please present this document to your pharmacist to scan the barcode and dispense the prescribed medication.',\n      options: {\n        title: 'What are your options if you lost this document?',\n        option1: 'Via Masanté.be - MyHealthViewer - MyMeds App or any other app, you can show your prescription to the pharmacist who will scan the barcode.',\n        option2:\n          'You can also collect the prescribed products with your eID (or your national register number if your eID was read by the pharmacist who dispenses the products within the last 15 months).',\n      },\n      prescriber: 'Prescriber',\n      patient: 'Beneficiary',\n      electronicContent: 'Electronic prescription content:',\n      product: 'Product:',\n      dosage: 'Dosage:',\n      date: 'Date:',\n      validUntil: 'Valid until:',\n    },\n    list: {\n      sentTitle: 'Sent prescriptions:',\n      pendingTitle: 'Pending prescriptions:',\n      print: 'Print',\n      send: 'Send',\n      sendAndPrint: 'Send and print',\n    },\n    form: {\n      medicationTitle: 'DCI group name',\n      dosage: 'Dosage',\n      duration: 'Duration (number of units)',\n      durationTimeUnit: 'Time unit',\n      treatmentStartDate: 'Start date of treatment',\n      executableUntil: 'Executable until',\n      prescriptionsNumber: 'Number of prescriptions',\n      periodicityTimeUnit: 'Periodicity',\n      periodicityDaysNumber: 'Number of days',\n      substitutionAllowed: 'Substitution allowed',\n      substitutionYes: 'Yes',\n      substitutionNo: 'No',\n      toggleExtraFields: 'Show more',\n      patientInstructions: 'Instructions for the patient',\n      reimbursementInstructions: 'Reimbursement instructions',\n      prescriberVisibility: 'Prescriber visibility',\n      pharmacistVisibility: 'Pharmacist visibility',\n      cancel: 'Cancel',\n      submit: 'Submit',\n      fieldRequired: 'This field is required',\n      fieldInvalid: 'Invalid field',\n      instructionLabelNone: 'None',\n    },\n  },\n  nl: {\n    createTitle: 'Voorschrift aanmaken',\n    modifyTitle: 'Voorschrift bewerken',\n    pdf: {\n      title: 'BEWIJS VAN ELEKTRONISCH VOORSCHRIFT',\n      instructions: 'Gelieve dit document aan uw apotheker te tonen zodat hij/zij de barcode kan scannen en de voorgeschreven geneesmiddelen kan afleveren.',\n      options: {\n        title: 'Welke opties hebt u om naar de apotheek te gaan als u dit document bent verloren?',\n        option1: 'Via Masanté.be - MyHealthViewer - MijnGeneesmiddelen-app of een andere app, kunt u uw voorschrift tonen aan de apotheker, die de barcode zal scannen.',\n        option2:\n          'U kunt de voorgeschreven producten ook afhalen met uw eID (of uw rijksregisternummer als uw eID werd uitgelezen door de apotheker die de producten aflevert binnen de laatste 15 maanden).',\n      },\n      prescriber: 'Voorschrijver',\n      patient: 'Begunstigde',\n      electronicContent: 'Inhoud van het elektronisch voorschrift:',\n      product: 'Product:',\n      dosage: 'Dosering:',\n      date: 'Datum:',\n      validUntil: 'Uitvoerbaar tot:',\n    },\n    list: {\n      sentTitle: 'Verzonden voorschriften:',\n      pendingTitle: 'Voorschriften in afwachting:',\n      print: 'Afdrukken',\n      send: 'Verzenden',\n      sendAndPrint: 'Verzenden en afdrukken',\n    },\n    form: {\n      medicationTitle: 'Naam van DCI-groep',\n      dosage: 'Dosering',\n      duration: 'Duur (aantal eenheden)',\n      durationTimeUnit: 'Tijdseenheid',\n      treatmentStartDate: 'Startdatum van behandeling',\n      executableUntil: 'Uitvoerbaar tot',\n      prescriptionsNumber: 'Aantal voorschriften',\n      periodicityTimeUnit: 'Periodiciteit',\n      periodicityDaysNumber: 'Aantal dagen',\n      substitutionAllowed: 'Vervanging toegestaan',\n      substitutionYes: 'Ja',\n      substitutionNo: 'Nee',\n      toggleExtraFields: 'Meer weergeven',\n      patientInstructions: 'Instructies voor de patiënt',\n      reimbursementInstructions: 'Instructies voor terugbetaling',\n      prescriberVisibility: 'Zichtbaarheid voor de voorschrijver',\n      pharmacistVisibility: 'Zichtbaarheid voor de apotheker',\n      cancel: 'Annuleren',\n      submit: 'Indienen',\n      fieldRequired: 'Dit veld is verplicht',\n      fieldInvalid: 'Ongeldig veld',\n      instructionLabelNone: 'Geen',\n    },\n  },\n  de: {\n    createTitle: 'Rezept erstellen',\n    modifyTitle: 'Rezept bearbeiten',\n    pdf: {\n      title: 'NACHWEIS DES ELEKTRONISCHEN REZEPTS',\n      instructions: 'Bitte legen Sie dieses Dokument Ihrem Apotheker vor, damit er den Barcode scannen und die verschriebenen Medikamente abgeben kann.',\n      options: {\n        title: 'Welche Möglichkeiten haben Sie, wenn Sie dieses Dokument verloren haben?',\n        option1: 'Über Masanté.be – MyHealthViewer – MeineMedikamente-App oder eine andere App können Sie Ihr Rezept dem Apotheker zeigen, der den Barcode scannt.',\n        option2:\n          'Sie können die verschriebenen Produkte auch mit Ihrem eID (oder Ihrer nationalen Registernummer, falls Ihre eID vom Apotheker, der Ihnen in den letzten 15 Monaten Produkte ausgehändigt hat, gelesen wurde) abholen.',\n      },\n      prescriber: 'Verschreiber',\n      patient: 'Empfänger',\n      electronicContent: 'Inhalt des elektronischen Rezepts:',\n      product: 'Produkt:',\n      dosage: 'Dosierung:',\n      date: 'Datum:',\n      validUntil: 'Gültig bis:',\n    },\n    list: {\n      sentTitle: 'Versendete Rezepte:',\n      pendingTitle: 'Ausstehende Rezepte:',\n      print: 'Drucken',\n      send: 'Senden',\n      sendAndPrint: 'Senden und drucken',\n    },\n    form: {\n      medicationTitle: 'Name der DCI-Gruppe',\n      dosage: 'Dosierung',\n      duration: 'Dauer (Anzahl der Einheiten)',\n      durationTimeUnit: 'Zeiteinheit',\n      treatmentStartDate: 'Behandlungsbeginn',\n      executableUntil: 'Ausführbar bis',\n      prescriptionsNumber: 'Anzahl der Rezepte',\n      periodicityTimeUnit: 'Periodizität',\n      periodicityDaysNumber: 'Anzahl der Tage',\n      substitutionAllowed: 'Substitution erlaubt',\n      substitutionYes: 'Ja',\n      substitutionNo: 'Nein',\n      toggleExtraFields: 'Mehr anzeigen',\n      patientInstructions: 'Anweisungen für den Patienten',\n      reimbursementInstructions: 'Anweisungen zur Erstattung',\n      prescriberVisibility: 'Sichtbarkeit für den Verschreiber',\n      pharmacistVisibility: 'Sichtbarkeit für den Apotheker',\n      cancel: 'Abbrechen',\n      submit: 'Absenden',\n      fieldRequired: 'Dieses Feld ist erforderlich',\n      fieldInvalid: 'Ungültiges Feld',\n      instructionLabelNone: 'Keine',\n    },\n  },\n}\n","/* eslint-disable max-len */\nexport const medicationTranslations = {\n  fr: {\n    drugType: {\n      medication: 'Médicament',\n      molecule: 'Molécule',\n      homologation: 'Homologation',\n    },\n    drugInfographic: {\n      blackTriangle: 'Pharmacovigilance renforcée (Triangle noir)',\n      rma: 'Activités additionnelles de minimisation des risques ou additional RMA (Risk Minimisation Activities) (Source: AFMPS)',\n      genericPrescriptionRequired: 'Ordonnance générique requise',\n    },\n    drugSpecialRegulation: {\n      noNarcoticRegulation: 'Aucun stupéfiant, médicament soumis à réglementation particulière',\n      narcoticRegulation: 'Stupéfiant, médicament soumis à réglementation particulière',\n      noSpecialRegulation: 'Aucune réglementation particulière',\n    },\n    supply: {\n      issueTitle: \"Problème d'approvisionnement temporaire :\",\n      startDate: 'Disponibilité limitée depuis :',\n      expectedEndDate: 'Date de fin présumée :',\n      reason: 'Raison :',\n      impact: 'Impact :',\n      prescriberNote: 'Déclaration du prescripteur :',\n      downloadPdf: 'Télécharger le document en .pdf',\n      extraInfo: 'Informations complémentaires :',\n    },\n    commercialization: {\n      end: 'Fin de commercialisation :',\n      limitedAvailabilityFrom: 'Disponibilité limitée à partir de :',\n      unavailableFrom: 'Indisponible à partir de :',\n      endReason: 'Raison :',\n      endImpact: 'Impact :',\n      endAdditionalInformation: 'Informations complémentaires :',\n      start: 'Début de commercialisation :',\n      startAvailableFrom: 'Disponible depuis :',\n    },\n    reimbursement: {\n      title: 'Remboursement :',\n      category: 'Catégorie de remboursement :',\n      categoryLabel: 'Spécification de la catégorie de remboursement :',\n      copay: 'Ticket modérateur type',\n      copayPreferential: ' Préférentiel :',\n      copayActive: ' Actif :',\n      temporary: 'Remboursement temporaire (art. 111) :',\n      chapter: 'Chapitre :',\n      noneTitle: 'Conditions de prescription',\n      notApplicable: 'Non applicable',\n      non: 'Non',\n    },\n    delivery: {\n      title: 'Conditions de livraison :',\n      code: 'Code de livraison :',\n      modus: 'Mode de livraison :',\n      specification: 'Spécification de livraison :',\n      notApplicable: 'Non applicable',\n    },\n    prescription: {\n      title: 'Conditions de prescription :',\n      code: 'Code de prescription :',\n      specification: 'Spécification de prescription :',\n      free: 'Libre de prescription',\n    },\n    vmp: {\n      label: 'VMP :',\n      groupLabel: 'Groupe VMP :',\n    },\n    links: {\n      cbip: 'Répertoire commenté des médicaments (CBIP)',\n      leaflet: 'Notice pour le patient',\n      rma: 'Activités de réduction des risques (RMA)',\n      spc: 'Résumé des caractéristiques du produit (RCP)',\n      dhpc: 'Communication directe aux professionnels de santé (DHPC)',\n    },\n    ui: {\n      price: 'Prix :',\n    },\n    search: {\n      label: 'Trouver un médicament',\n      errorMessage: ' Entrez au moins 3 lettres du nom du médicament',\n    },\n  },\n  en: {\n    drugType: {\n      medication: 'Medication',\n      molecule: 'Molecule',\n      homologation: 'Homologation',\n    },\n    drugInfographic: {\n      blackTriangle: 'Enhanced pharmacovigilance (Black triangle)',\n      rma: 'Additional risk minimisation activities or additional RMA (Risk Minimisation Activities) (Source: FAMHP)',\n      genericPrescriptionRequired: 'Generic prescription required',\n    },\n    drugSpecialRegulation: {\n      noNarcoticRegulation: 'No narcotic, specially regulated drug',\n      narcoticRegulation: 'Narcotic, specially regulated drug',\n      noSpecialRegulation: 'No special regulation',\n    },\n    supply: {\n      issueTitle: 'Temporary supply problem:',\n      startDate: 'Limited availability since:',\n      expectedEndDate: 'Presumed end date:',\n      reason: 'Reason:',\n      impact: 'Impact:',\n      prescriberNote: 'Prescriber declaration:',\n      downloadPdf: 'Download the document (.pdf)',\n      extraInfo: 'Additional information:',\n    },\n    commercialization: {\n      end: 'End of commercialisation:',\n      limitedAvailabilityFrom: 'Limited availability from:',\n      unavailableFrom: 'Unavailable from:',\n      endReason: 'Reason:',\n      endImpact: 'Impact:',\n      endAdditionalInformation: 'Additional information:',\n      start: 'Start of commercialisation:',\n      startAvailableFrom: 'Available from:',\n    },\n    reimbursement: {\n      title: 'Reimbursement:',\n      category: 'Reimbursement category:',\n      categoryLabel: 'Reimbursement category specification:',\n      copay: 'Co-payment type',\n      copayPreferential: 'Preferential:',\n      copayActive: 'Active:',\n      temporary: 'Temporary reimbursement (art. 111):',\n      chapter: 'Chapter:',\n      noneTitle: 'Prescription conditions',\n      notApplicable: 'Not applicable',\n      non: 'No',\n    },\n    delivery: {\n      title: 'Delivery conditions:',\n      code: 'Delivery code:',\n      modus: 'Delivery method:',\n      specification: 'Delivery specification:',\n      notApplicable: 'Not applicable',\n    },\n    prescription: {\n      title: 'Prescription conditions:',\n      code: 'Prescription code:',\n      specification: 'Prescription specification:',\n      free: 'Free of prescription',\n    },\n    vmp: {\n      label: 'VMP:',\n      groupLabel: 'VMP-group:',\n    },\n    links: {\n      cbip: 'Commented Medicines Directory (CBIP)',\n      leaflet: 'Patient information leaflet',\n      rma: 'Risk Minimisation Activities (RMA)',\n      spc: 'Summary of Product Characteristics (SPC)',\n      dhpc: 'Direct Healthcare Professional Communication (DHPC)',\n    },\n    ui: {\n      price: 'Price:',\n    },\n    search: {\n      label: 'Find a medication',\n      errorMessage: 'Enter at least 3 letters of the medication name',\n    },\n  },\n  nl: {\n    drugType: {\n      medication: 'Geneesmiddel',\n      molecule: 'Molecule',\n      homologation: 'Homologatie',\n    },\n    drugInfographic: {\n      blackTriangle: 'Verhoogde waakzaamheid (Zwarte driehoek)',\n      rma: 'Aanvullende risicobeperkende maatregelen (RMA) (Bron: FAGG)',\n      genericPrescriptionRequired: 'Generiek voorschrift vereist',\n    },\n    drugSpecialRegulation: {\n      noNarcoticRegulation: 'Geen verdovend middel, geneesmiddel onderworpen aan specifieke regelgeving',\n      narcoticRegulation: 'Verdovend middel, geneesmiddel onderworpen aan specifieke regelgeving',\n      noSpecialRegulation: 'Geen specifieke regelgeving',\n    },\n    supply: {\n      issueTitle: 'Tijdelijk bevoorradingsprobleem:',\n      startDate: 'Beperkte beschikbaarheid sinds:',\n      expectedEndDate: 'Verwachte einddatum:',\n      reason: 'Reden:',\n      impact: 'Impact:',\n      prescriberNote: 'Verklaring van de voorschrijver:',\n      downloadPdf: 'Download het document (.pdf)',\n      extraInfo: 'Aanvullende informatie:',\n    },\n    commercialization: {\n      end: 'Einde van commercialisering:',\n      limitedAvailabilityFrom: 'Beperkte beschikbaarheid vanaf:',\n      unavailableFrom: 'Niet beschikbaar vanaf:',\n      endReason: 'Reden:',\n      endImpact: 'Impact:',\n      endAdditionalInformation: 'Aanvullende informatie:',\n      start: 'Start van commercialisering:',\n      startAvailableFrom: 'Beschikbaar sinds:',\n    },\n    reimbursement: {\n      title: 'Terugbetaling:',\n      category: 'Terugbetalingscategorie:',\n      categoryLabel: 'Specificatie van de terugbetalingscategorie:',\n      copay: 'Soort remgeld',\n      copayPreferential: 'Voorkeurtarief:',\n      copayActive: 'Actief:',\n      temporary: 'Tijdelijke terugbetaling (art. 111):',\n      chapter: 'Hoofdstuk:',\n      noneTitle: 'Voorschrijfvoorwaarden',\n      notApplicable: 'Niet van toepassing',\n      non: 'Nee',\n    },\n    delivery: {\n      title: 'Aflevervoorwaarden:',\n      code: 'Aflevercode:',\n      modus: 'Afleverwijze:',\n      specification: 'Specificatie van aflevering:',\n      notApplicable: 'Niet van toepassing',\n    },\n    prescription: {\n      title: 'Voorschrijfvoorwaarden:',\n      code: 'Voorschrijfcode:',\n      specification: 'Specificatie van voorschrift:',\n      free: 'Vrij voorschrijfbaar',\n    },\n    vmp: {\n      label: 'VMP:',\n      groupLabel: 'VMP-groep:',\n    },\n    links: {\n      cbip: 'Gecommentarieerde geneesmiddelenrepertorium (CBIP)',\n      leaflet: 'Bijsluiter voor de patiënt',\n      rma: 'Maatregelen voor risicobeperking (RMA)',\n      spc: 'Samenvatting van de productkenmerken (SKP)',\n      dhpc: 'Rechtstreekse communicatie naar zorgverleners (DHPC)',\n    },\n    ui: {\n      price: 'Prijs:',\n    },\n    search: {\n      label: 'Zoek een geneesmiddel',\n      errorMessage: 'Voer minstens 3 letters van de naam in',\n    },\n  },\n  de: {\n    drugType: {\n      medication: 'Arzneimittel',\n      molecule: 'Molekül',\n      homologation: 'Zulassung',\n    },\n    drugInfographic: {\n      blackTriangle: 'Verstärkte Pharmakovigilanz (Schwarzes Dreieck)',\n      rma: 'Zusätzliche Maßnahmen zur Risikominimierung (RMA) (Quelle: BfArM)',\n      genericPrescriptionRequired: 'Generisches Rezept erforderlich',\n    },\n    drugSpecialRegulation: {\n      noNarcoticRegulation: 'Kein Betäubungsmittel, Arzneimittel mit besonderer Regelung',\n      narcoticRegulation: 'Betäubungsmittel, Arzneimittel mit besonderer Regelung',\n      noSpecialRegulation: 'Keine besondere Regelung',\n    },\n    supply: {\n      issueTitle: 'Vorübergehendes Lieferproblem :',\n      startDate: 'Eingeschränkte Verfügbarkeit seit :',\n      expectedEndDate: 'Voraussichtliches Enddatum :',\n      reason: 'Grund :',\n      impact: 'Auswirkung :',\n      prescriberNote: 'Erklärung des Verschreibers :',\n      downloadPdf: 'Dokument als .pdf herunterladen',\n      extraInfo: 'Zusätzliche Informationen :',\n    },\n    commercialization: {\n      end: 'Ende der Vermarktung :',\n      limitedAvailabilityFrom: 'Eingeschränkte Verfügbarkeit ab :',\n      unavailableFrom: 'Nicht verfügbar ab :',\n      endReason: 'Grund :',\n      endImpact: 'Auswirkung :',\n      endAdditionalInformation: 'Zusätzliche Informationen :',\n      start: 'Beginn der Vermarktung :',\n      startAvailableFrom: 'Verfügbar seit :',\n    },\n    reimbursement: {\n      title: 'Erstattung :',\n      category: 'Erstattungskategorie :',\n      categoryLabel: 'Spezifikation der Erstattungskategorie :',\n      copay: 'Zuzahlungstyp',\n      copayPreferential: ' Bevorzugt :',\n      copayActive: ' Aktiv :',\n      temporary: 'Vorübergehende Erstattung (Art. 111) :',\n      chapter: 'Kapitel :',\n      noneTitle: 'Verordnungsbedingungen',\n      notApplicable: 'Nicht zutreffend',\n      non: 'Nein',\n    },\n    delivery: {\n      title: 'Lieferbedingungen :',\n      code: 'Liefercode :',\n      modus: 'Liefermethode :',\n      specification: 'Lieferdetails :',\n      notApplicable: 'Nicht zutreffend',\n    },\n    prescription: {\n      title: 'Verordnungsbedingungen :',\n      code: 'Verordnungscode :',\n      specification: 'Verordnungsdetails :',\n      free: 'Frei verschreibbar',\n    },\n    vmp: {\n      label: 'VMP :',\n      groupLabel: 'VMP-Gruppe :',\n    },\n    links: {\n      cbip: 'Kommentiertes Arzneimittelverzeichnis (CBIP)',\n      leaflet: 'Packungsbeilage für Patienten',\n      rma: 'Maßnahmen zur Risikominimierung (RMA)',\n      spc: 'Fachinformation (SPC)',\n      dhpc: 'Direkte Kommunikation an medizinisches Fachpersonal (DHPC)',\n    },\n    ui: {\n      price: 'Preis :',\n    },\n    search: {\n      label: 'Arzneimittel suchen',\n      errorMessage: 'Geben Sie mindestens 3 Buchstaben des Arzneimittelnamens ein',\n    },\n  },\n}\n","/* eslint-disable max-len */\nexport const practitionerTranslations = {\n  fr: {\n    certificateUpload: {\n      titleUpload: 'Télécharger le certificat',\n      titlePassword: 'Entrez le mot de passe du certificat',\n      fileLabel: 'Certificat du praticien',\n      passwordLabel: 'Mot de passe du certificat',\n      submitButtonUpload: 'Crypter et télécharger',\n      submitButtonPassword: 'Soumettre',\n      resetButton: 'Télécharger un autre certificat',\n      errorRequired: 'Ce champ est requis',\n      errorInvalid: 'Champ invalide',\n      passwordMissingTitle: 'Mot de passe manquant',\n      passwordMissingDescription:\n        'Veuillez saisir le mot de passe associé au certificat afin de pouvoir le déchiffrer. Ce mot de passe est requis pour poursuivre la vérification.',\n    },\n    certificateFeedback: {\n      successTitle: 'Téléchargement du certificat réussi',\n      successDescription:\n        'Le certificat du praticien a été téléchargé avec succès et le mot de passe a été enregistré en toute sécurité. Vous pouvez maintenant poursuivre les prochaines étapes.',\n      failureTitle: 'Échec du téléchargement du certificat',\n      failureDescription:\n        \"Une erreur est survenue lors du téléchargement du certificat du praticien ou de l'enregistrement du mot de passe. Veuillez vous assurer que le certificat est valide et réessayez. Si le problème persiste, contactez le support.\",\n      verificationErrorTitle: 'Erreur de vérification du certificat',\n    },\n    printModal: {\n      title: 'Imprimer la prescription',\n      close: 'Fermer',\n      print: 'Imprimer',\n    },\n  },\n  en: {\n    certificateUpload: {\n      titleUpload: 'Upload certificate',\n      titlePassword: 'Enter certificate password',\n      fileLabel: 'Practitioner certificate',\n      passwordLabel: 'Certificate password',\n      submitButtonUpload: 'Encrypt and upload',\n      submitButtonPassword: 'Submit',\n      resetButton: 'Upload another certificate',\n      errorRequired: 'This field is required',\n      errorInvalid: 'Invalid field',\n      passwordMissingTitle: 'Missing password',\n      passwordMissingDescription: 'Please enter the password associated with the certificate to decrypt it. This password is required to continue verification.',\n    },\n    certificateFeedback: {\n      successTitle: 'Certificate upload successful',\n      successDescription: 'The certificate’s certificate was uploaded successfully and the password has been securely saved. You may proceed with the next steps.',\n      failureTitle: 'Certificate upload failed',\n      failureDescription:\n        'An error occurred while uploading the certificate or saving the password. Please ensure the certificate is valid and try again. If the problem persists, contact support.',\n      verificationErrorTitle: 'Certificate verification error',\n    },\n    printModal: {\n      title: 'Print prescription',\n      close: 'Close',\n      print: 'Print',\n    },\n  },\n  nl: {\n    certificateUpload: {\n      titleUpload: 'Certificaat uploaden',\n      titlePassword: 'Voer het certificaatwachtwoord in',\n      fileLabel: 'Certificaat van de zorgverlener',\n      passwordLabel: 'Wachtwoord van het certificaat',\n      submitButtonUpload: 'Versleutelen en uploaden',\n      submitButtonPassword: 'Verzenden',\n      resetButton: 'Ander certificaat uploaden',\n      errorRequired: 'Dit veld is verplicht',\n      errorInvalid: 'Ongeldig veld',\n      passwordMissingTitle: 'Wachtwoord ontbreekt',\n      passwordMissingDescription:\n        'Voer het wachtwoord in dat aan het certificaat is gekoppeld om het te ontsleutelen. Dit wachtwoord is vereist om de verificatie voort te zetten.',\n    },\n    certificateFeedback: {\n      successTitle: 'Certificaat succesvol geüpload',\n      successDescription: 'Het certificaat van de zorgverlener is succesvol geüpload en het wachtwoord is veilig opgeslagen. U kunt nu doorgaan met de volgende stappen.',\n      failureTitle: 'Uploaden van certificaat mislukt',\n      failureDescription:\n        'Er is een fout opgetreden bij het uploaden van het certificaat of het opslaan van het wachtwoord. Zorg ervoor dat het certificaat geldig is en probeer het opnieuw. Neem contact op met de ondersteuning als het probleem aanhoudt.',\n      verificationErrorTitle: 'Fout bij verificatie van certificaat',\n    },\n    printModal: {\n      title: 'Voorschrift afdrukken',\n      close: 'Sluiten',\n      print: 'Afdrukken',\n    },\n  },\n  de: {\n    certificateUpload: {\n      titleUpload: 'Zertifikat hochladen',\n      titlePassword: 'Zertifikat-Passwort eingeben',\n      fileLabel: 'Zertifikat des Arztes',\n      passwordLabel: 'Passwort des Zertifikats',\n      submitButtonUpload: 'Verschlüsseln und hochladen',\n      submitButtonPassword: 'Absenden',\n      resetButton: 'Anderes Zertifikat hochladen',\n      errorRequired: 'Dieses Feld ist erforderlich',\n      errorInvalid: 'Ungültiges Feld',\n      passwordMissingTitle: 'Passwort fehlt',\n      passwordMissingDescription:\n        'Bitte geben Sie das Passwort ein, das mit dem Zertifikat verknüpft ist, um es zu entschlüsseln. Dieses Passwort ist für die weitere Überprüfung erforderlich.',\n    },\n    certificateFeedback: {\n      successTitle: 'Zertifikat erfolgreich hochgeladen',\n      successDescription:\n        'Das Zertifikat des Arztes wurde erfolgreich hochgeladen und das Passwort wurde sicher gespeichert. Sie können nun mit den nächsten Schritten fortfahren.',\n      failureTitle: 'Zertifikat-Upload fehlgeschlagen',\n      failureDescription:\n        'Beim Hochladen des Zertifikats oder beim Speichern des Passworts ist ein Fehler aufgetreten. Bitte stellen Sie sicher, dass das Zertifikat gültig ist, und versuchen Sie es erneut. Wenn das Problem weiterhin besteht, wenden Sie sich an den Support.',\n      verificationErrorTitle: 'Fehler bei der Zertifikatsprüfung',\n    },\n    printModal: {\n      title: 'Rezept drucken',\n      close: 'Schließen',\n      print: 'Drucken',\n    },\n  },\n}\n","export const prescriptionVisibilityTranslations = {\n  fr: {\n    practitionerVisibility: {\n      open: 'Visible pour tous les prescripteurs',\n      locked: 'Visible uniquement pour moi-même',\n      gmd_prescriber: 'Visible uniquement pour le titulaire du DMG',\n    },\n    pharmacistVisibility: {\n      null: 'Le médicament est visible par tous les pharmaciens',\n      locked: 'Le médicament n`est pas visible par tous les pharmaciens',\n    },\n  },\n  en: {\n    practitionerVisibility: {\n      open: 'Visible to all prescribers',\n      locked: 'Visible only to myself',\n      gmd_prescriber: 'Visible only to the GMD holder',\n    },\n    pharmacistVisibility: {\n      null: 'The medication is visible to all pharmacists',\n      locked: 'The medication is not visible to all pharmacists',\n    },\n  },\n  nl: {\n    practitionerVisibility: {\n      open: 'Zichtbaar voor alle voorschrijvers',\n      locked: 'Alleen zichtbaar voor mezelf',\n      gmd_prescriber: 'Alleen zichtbaar voor de GMD-houder',\n    },\n    pharmacistVisibility: {\n      null: 'Het geneesmiddel is zichtbaar voor alle apothekers',\n      locked: 'Het geneesmiddel is niet zichtbaar voor alle apothekers',\n    },\n  },\n  de: {\n    practitionerVisibility: {\n      open: 'Sichtbar für alle verschreiber',\n      locked: 'Nur für mich sichtbar',\n      gmd_prescriber: 'Nur für den GMD-inhaber sichtbar',\n    },\n    pharmacistVisibility: {\n      null: 'Das medikament ist für alle apotheker sichtbar',\n      locked: 'Das medikament ist nicht für alle apotheker sichtbar',\n    },\n  },\n};\n","export const reimbursementTranslations = {\n  fr: {\n    practitionerSelectionOptions: {\n      none: 'Aucun',\n      PAYINGTHIRDPARTY: 'Tiers Payant',\n      FIRSTDOSE: 'Première Dose',\n      SECONDDOSE: 'Deuxième Dose',\n      THIRDDOSE: 'Troisième Dose',\n      CHRONICKINDEYDISEASE: 'Maladie Rénale Chronique',\n      DIABETESTREATMENT: 'Traitement du Diabète',\n      DIABETESCONVENTION: 'Convention Diabète',\n      NOTREIMBURSABLE: 'Non Remboursable',\n      EXPLAINMEDICATION: 'Explication du Médicament',\n      DIABETESSTARTPATH: 'Parcours Initial Diabète',\n    },\n    categoryOptions: {\n      A: 'Médicaments vitaux',\n      B: 'Médicaments thérapeutiquement importants',\n      C: 'Médicaments pour traitement symptomatique',\n      Cs: 'Ex. vaccins, médicaments antiallergiques',\n      Cx: 'Ex. contraceptifs',\n      Fa: 'Médicaments vitaux remboursés sur une base fixe',\n      Fb: 'Médicaments thérapeutiquement importants remboursés sur une base fixe',\n    },\n  },\n  en: {\n    practitionerSelectionOptions: {\n      none: 'None',\n      PAYINGTHIRDPARTY: 'Third-party payment',\n      FIRSTDOSE: 'First dose',\n      SECONDDOSE: 'Second dose',\n      THIRDDOSE: 'Third dose',\n      CHRONICKINDEYDISEASE: 'Chronic kidney disease',\n      DIABETESTREATMENT: 'Diabetes treatment',\n      DIABETESCONVENTION: 'Diabetes convention',\n      NOTREIMBURSABLE: 'Not reimbursable',\n      EXPLAINMEDICATION: 'Medication explanation',\n      DIABETESSTARTPATH: 'Diabetes initial care path',\n    },\n    categoryOptions: {\n      A: 'Life-saving medicines',\n      B: 'Therapeutically important medicines',\n      C: 'Medicines for symptomatic treatment',\n      Cs: 'e.g. vaccines, allergy medicines',\n      Cx: 'e.g. contraceptives',\n      Fa: 'Life-saving medicines with reimbursement based on a fixed amount',\n      Fb: 'Therapeutically important medicines with reimbursement based on a fixed amount',\n    },\n  },\n  nl: {\n    practitionerSelectionOptions: {\n      none: 'Geen',\n      PAYINGTHIRDPARTY: 'Derdebetaler',\n      FIRSTDOSE: 'Eerste Dosis',\n      SECONDDOSE: 'Tweede Dosis',\n      THIRDDOSE: 'Derde Dosis',\n      CHRONICKINDEYDISEASE: 'Chronische Nierziekte',\n      DIABETESTREATMENT: 'Diabetesbehandeling',\n      DIABETESCONVENTION: 'Diabetesconventie',\n      NOTREIMBURSABLE: 'Niet Terugbetaalbaar',\n      EXPLAINMEDICATION: 'Uitleg over het Geneesmiddel',\n      DIABETESSTARTPATH: 'Opstarttraject Diabetes',\n    },\n    categoryOptions: {\n      A: 'Levensreddende geneesmiddelen',\n      B: 'Therapeutisch belangrijke geneesmiddelen',\n      C: 'Geneesmiddelen voor symptomatische behandeling',\n      Cs: 'bv. vaccins, allergiemedicatie',\n      Cx: 'bv. anticonceptiva',\n      Fa: 'Levensreddende geneesmiddelen met terugbetaling op basis van een vast bedrag',\n      Fb: 'Therapeutisch belangrijke geneesmiddelen met terugbetaling op basis van een vast bedrag',\n    },\n  },\n  de: {\n    practitionerSelectionOptions: {\n      none: 'Keine',\n      PAYINGTHIRDPARTY: 'Drittzahlerregelung',\n      FIRSTDOSE: 'Erste Dosis',\n      SECONDDOSE: 'Zweite Dosis',\n      THIRDDOSE: 'Dritte Dosis',\n      CHRONICKINDEYDISEASE: 'Chronische Nierenerkrankung',\n      DIABETESTREATMENT: 'Diabetesbehandlung',\n      DIABETESCONVENTION: 'Diabetesvereinbarung',\n      NOTREIMBURSABLE: 'Nicht Erstattungsfähig',\n      EXPLAINMEDICATION: 'Erläuterung zum Medikament',\n      DIABETESSTARTPATH: 'Einstiegspfad Diabetes',\n    },\n    categoryOptions: {\n      A: 'Lebensrettende Medikamente',\n      B: 'Therapeutisch wichtige Medikamente',\n      C: 'Medikamente zur symptomatischen Behandlung',\n      Cs: 'z. B. Impfstoffe, Allergiemedikamente',\n      Cx: 'z. B. Verhütungsmittel',\n      Fa: 'Lebensrettende Medikamente mit Erstattung auf Basis eines Festbetrags',\n      Fb: 'Therapeutisch wichtige Medikamente mit Erstattung auf Basis eines Festbetrags',\n    },\n  },\n};\n","export const prescriptionDurationTranslations = {\n  fr: {\n    durationUnits: {\n      day: 'jour',\n      week: 'semaine',\n    },\n    periodicityUnits: {\n      none: 'aucune',\n      week: 'semaine',\n      twoWeeks: '2 semaines',\n      threeWeeks: '3 semaines',\n      numberOfDays: 'x nombre de jours',\n    },\n  },\n  en: {\n    durationUnits: {\n      day: 'day',\n      week: 'week',\n    },\n    periodicityUnits: {\n      none: 'none',\n      week: 'week',\n      twoWeeks: '2 weeks',\n      threeWeeks: '3 weeks',\n      numberOfDays: 'x number of days',\n    },\n  },\n  nl: {\n    durationUnits: {\n      day: 'dag',\n      week: 'week',\n    },\n    periodicityUnits: {\n      none: 'geen',\n      week: 'week',\n      twoWeeks: '2 weken',\n      threeWeeks: '3 weken',\n      numberOfDays: 'x aantal dagen',\n    },\n  },\n  de: {\n    durationUnits: {\n      day: 'tag',\n      week: 'woche',\n    },\n    periodicityUnits: {\n      none: 'keine',\n      week: 'woche',\n      twoWeeks: '2 wochen',\n      threeWeeks: '3 wochen',\n      numberOfDays: 'x anzahl der tage',\n    },\n  },\n};\n","export const deliveryModusTranslations = {\n  fr: {\n    specifications: {\n      Sp: 'Prescription par un médecin-spécialiste',\n      Sp1: 'Première prescription par un médecin-spécialiste, prescription de suivi par un médecin généraliste',\n      'Sp/S': 'Prescription par un médecin-spécialiste',\n      'Sp1/S':\n        'Première prescription par un médecin-spécialiste, prescription de suivi par un médecin généraliste',\n      'IMP/Sp': 'Prescription par un médecin-spécialiste',\n      'IMP/Sp1':\n        'Première prescription par un médecin-spécialiste, prescription de suivi par un médecin généraliste',\n    },\n  },\n  en: {\n    specifications: {\n      Sp: 'Prescription by specialist',\n      Sp1: 'First prescription by specialist, follow-up prescription by general certificate',\n      'Sp/S': 'Prescription by specialist',\n      'Sp1/S':\n        'First prescription by specialist, follow-up prescription by general certificate',\n      'IMP/Sp': 'Prescription by specialist',\n      'IMP/Sp1':\n        'First prescription by specialist, follow-up prescription by general certificate',\n    },\n  },\n  nl: {\n    specifications: {\n      Sp: 'Voorschrift door een geneesheer-specialist',\n      Sp1: 'Eerste voorschrift door een geneesheer-specialist, vervolgoorschrift door huisarts',\n      'Sp/S': 'Voorschrift door een geneesheer-specialist',\n      'Sp1/S':\n        'Eerste voorschrift door een geneesheer-specialist, vervolgoorschrift door huisarts',\n      'IMP/Sp': 'Voorschrift door een geneesheer-specialist',\n      'IMP/Sp1':\n        'Eerste voorschrift door een geneesheer-specialist, vervolgoorschrift door huisarts',\n    },\n  },\n  de: {\n    specifications: {\n      Sp: 'Verschreibung von einem Facharzt',\n      Sp1: 'Erste Verschreibung von einem Facharzt, Folgeverordnung vom Hausarzt',\n      'Sp/S': 'Verschreibung von einem Facharzt',\n      'Sp1/S':\n        'Erste Verschreibung von einem Facharzt, Folgeverordnung vom Hausarzt',\n      'IMP/Sp': 'Verschreibung von einem Facharzt',\n      'IMP/Sp1':\n        'Erste Verschreibung von einem Facharzt, Folgeverordnung vom Hausarzt',\n    },\n  },\n};\n","import { homeTranslations } from './components/home.translations'\nimport { prescriptionTranslations } from './components/prescription.translations'\nimport { medicationTranslations } from './components/medication.translations'\nimport { practitionerTranslations } from './components/practitioner.translations'\nimport { prescriptionVisibilityTranslations } from './utils/visibility-helpers.translations'\nimport { reimbursementTranslations } from './utils/reimbursement-helpers.translations'\nimport { prescriptionDurationTranslations } from './utils/prescription-duration-helpers.translations'\nimport { deliveryModusTranslations } from './utils/delivery-helpers.translations'\n\nexport const appTranslations = {\n  fr: {\n    home: homeTranslations.fr,\n    prescription: prescriptionTranslations.fr,\n    medication: medicationTranslations.fr,\n    practitioner: practitionerTranslations.fr,\n    prescriptionVisibilityHelper: prescriptionVisibilityTranslations.fr,\n    reimbursementHelper: reimbursementTranslations.fr,\n    prescriptionDurationHelper: prescriptionDurationTranslations.fr,\n    deliveryModusHelper: deliveryModusTranslations.fr,\n  },\n  en: {\n    home: homeTranslations.en,\n    prescription: prescriptionTranslations.en,\n    medication: medicationTranslations.en,\n    practitioner: practitionerTranslations.en,\n    prescriptionVisibilityHelper: prescriptionVisibilityTranslations.en,\n    reimbursementHelper: reimbursementTranslations.en,\n    prescriptionDurationHelper: prescriptionDurationTranslations.en,\n    deliveryModusHelper: deliveryModusTranslations.en,\n  },\n  nl: {\n    home: homeTranslations.nl,\n    prescription: prescriptionTranslations.nl,\n    medication: medicationTranslations.nl,\n    practitioner: practitionerTranslations.nl,\n    prescriptionVisibilityHelper: prescriptionVisibilityTranslations.nl,\n    reimbursementHelper: reimbursementTranslations.nl,\n    prescriptionDurationHelper: prescriptionDurationTranslations.nl,\n    deliveryModusHelper: deliveryModusTranslations.nl,\n  },\n  de: {\n    home: homeTranslations.de,\n    prescription: prescriptionTranslations.de,\n    medication: medicationTranslations.de,\n    practitioner: practitionerTranslations.de,\n    prescriptionVisibilityHelper: prescriptionVisibilityTranslations.de,\n    reimbursementHelper: reimbursementTranslations.de,\n    prescriptionDurationHelper: prescriptionDurationTranslations.de,\n    deliveryModusHelper: deliveryModusTranslations.de,\n  },\n}\n","export const FHC_URL = 'https://fhcacc.icure.cloud'\nexport const DEFAULT_APP_LANGULAGE = 'fr'\nexport const CERTIFICATE_IDB_CONFIG = {\n  DB_NAME: 'certificate-store',\n  STORE_NAME: 'certificates',\n  KEY_PATH: 'id',\n}\n\nexport const TOKEN_IDB_CONFIG = {\n  DB_NAME: 'token-store',\n  STORE_NAME: 'tokens',\n  KEY_PATH: 'id',\n}\n","import { type Amp, Nmp, type PaginatedListIterator, type SamV2Api, type SamVersion, VmpGroup } from '@icure/cardinal-be-sam-sdk'\n\nexport class SamSdkService {\n  private sdk: SamV2Api\n\n  constructor(sdk: SamV2Api) {\n    if (!sdk) throw new Error('SamV2Api instance is required')\n    this.sdk = sdk\n  }\n\n  /**\n   * Search for medications matching the given query and language.\n   * @param language Language code (e.g., 'en', 'fr', 'nl' or 'de')\n   * @param query Medication search query string\n   * @returns Paginated lists of AMP, VMPGroup, and NMP matches\n   */\n  async findMedicationsByLabel(language: string, query: string): Promise<[PaginatedListIterator<Amp>, PaginatedListIterator<VmpGroup>, PaginatedListIterator<Nmp>]> {\n    try {\n      return await Promise.all([\n        this.sdk.findPaginatedAmpsByLabel(language, query),\n        this.sdk.findPaginatedVmpGroupsByLabel(language, query),\n        this.sdk.findPaginatedNmpsByLabel(language, query),\n      ])\n    } catch (error) {\n      console.error('Error in findMedicationsByLabel:', error)\n      throw error\n    }\n  }\n\n  /**\n   * Fetch the current version information for the SAM database.\n   */\n  async fetchSamVersion(): Promise<SamVersion | undefined> {\n    try {\n      return await this.sdk.getSamVersion()\n    } catch (error) {\n      console.error('Error in fetchSamVersion:', error)\n      return undefined\n    }\n  }\n}\n","import { GenericStoreType } from '../../types' // adjust path as needed\n\nexport class IndexedDbService {\n  private db!: IDBDatabase\n  private readonly config: {\n    DB_NAME: string\n    STORE_NAME: string\n    KEY_PATH: string\n  }\n\n  constructor(config: { DB_NAME: string; STORE_NAME: string; KEY_PATH: string }) {\n    this.config = config\n  }\n\n  async initializeIndexedDb(): Promise<void> {\n    this.db = await new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.config.DB_NAME, 1)\n\n      request.onupgradeneeded = (event) => {\n        const db = (event.target as IDBOpenDBRequest).result\n        if (!db.objectStoreNames.contains(this.config.STORE_NAME)) {\n          db.createObjectStore(this.config.STORE_NAME, { keyPath: this.config.KEY_PATH })\n        }\n      }\n\n      request.onsuccess = () => resolve(request.result)\n      request.onerror = () => reject(request.error)\n    })\n  }\n\n  getIndexedDb(): IDBDatabase {\n    if (!this.db) {\n      throw new Error('IndexedDB not initialized. Call initializeIndexedDb() first.')\n    }\n    return this.db\n  }\n\n  getIndexedDbStore<T>(): GenericStoreType<T> {\n    const db = this.getIndexedDb()\n    const storeName = this.config.STORE_NAME\n\n    return {\n      get: (key: string): Promise<T> => {\n        return new Promise((resolve, reject) => {\n          const tx = db.transaction(storeName, 'readonly')\n          const store = tx.objectStore(storeName)\n          const request = store.get(key)\n\n          request.onsuccess = () => {\n            request.result != null ? resolve(request.result as T) : reject(new Error(`No value for key: ${key}`))\n          }\n          request.onerror = () => reject(request.error)\n        })\n      },\n\n      put: (key: string, value: T): Promise<T> => {\n        return new Promise((resolve, reject) => {\n          const tx = db.transaction(storeName, 'readwrite')\n          const store = tx.objectStore(storeName)\n\n          const getRequest = store.get(key)\n          getRequest.onsuccess = () => {\n            const exists = !!getRequest.result\n            console.log('exists')\n            console.log(exists)\n\n            const record = { id: key, value }\n            const request = exists ? store.put(record) : store.add(record)\n\n            request.onsuccess = () => resolve(value)\n            request.onerror = () => reject(request.error)\n          }\n          getRequest.onerror = () => reject(getRequest.error)\n        })\n      },\n\n      delete: (key: string): Promise<void> => {\n        return new Promise((resolve, reject) => {\n          const tx = db.transaction(storeName, 'readwrite')\n          const store = tx.objectStore(storeName)\n\n          console.log('store')\n          console.log(store)\n\n          const request = store.delete(key)\n\n          console.log('request')\n          console.log(request)\n\n          request.onsuccess = () => resolve()\n          request.onerror = () => reject(request.error)\n        })\n      },\n    }\n  }\n}\n","import { IndexedDbService } from '../indexed-db'\nimport { CertificateRecordType, GenericStoreType } from '../../types'\nimport { CERTIFICATE_IDB_CONFIG } from '../constants'\n\nexport class CertificateService {\n  private indexedDbService: IndexedDbService\n  private certificateStore: GenericStoreType<CertificateRecordType> | null = null\n\n  constructor() {\n    this.indexedDbService = new IndexedDbService(CERTIFICATE_IDB_CONFIG)\n  }\n\n  /** You MUST call this before using any instance methods. */\n  async initialize(): Promise<void> {\n    await this.indexedDbService.initializeIndexedDb()\n    this.certificateStore = this.indexedDbService.getIndexedDbStore<CertificateRecordType>()\n  }\n\n  public async loadCertificateInformation(hcp_ssin: string): Promise<\n    | {\n        salt: ArrayBuffer\n        iv: ArrayBuffer\n        encryptedCertificate: ArrayBuffer\n      }\n    | undefined\n  > {\n    try {\n      const record = await this.getCertificateFromStore(hcp_ssin)\n      return {\n        salt: new Uint8Array(record.salt).buffer,\n        iv: new Uint8Array(record.iv).buffer,\n        encryptedCertificate: new Uint8Array(record.encryptedCertificate).buffer,\n      }\n    } catch (error) {\n      console.error(`No certificate record found for HCP SSIN ${hcp_ssin}:`, error)\n      return undefined\n    }\n  }\n\n  public async loadAndDecryptCertificate(hcp_ssin: string, passphrase: string): Promise<ArrayBuffer | undefined> {\n    console.log('hcp_ssin: ' + hcp_ssin)\n    console.log('passphrase: ' + passphrase)\n    try {\n      const info = await this.loadCertificateInformation(hcp_ssin)\n      console.log('info: ')\n      console.log(info)\n\n      if (!info) return undefined\n\n      const { salt, iv, encryptedCertificate } = info\n      const encoder = new TextEncoder()\n      const passwordKey = await crypto.subtle.importKey('raw', encoder.encode(passphrase), { name: 'PBKDF2' }, false, ['deriveKey'])\n\n      const decryptionKey = await crypto.subtle.deriveKey(\n        { name: 'PBKDF2', salt: new Uint8Array(salt), iterations: 100_000, hash: 'SHA-256' },\n        passwordKey,\n        { name: 'AES-GCM', length: 256 },\n        false,\n        ['decrypt'],\n      )\n\n      return await crypto.subtle.decrypt(\n        {\n          name: 'AES-GCM',\n          iv: new Uint8Array(iv),\n        },\n        decryptionKey,\n        new Uint8Array(encryptedCertificate),\n      )\n    } catch (error) {\n      console.error(`Decryption failed for HCP SSIN \"${hcp_ssin}\":`, error)\n      return undefined\n    }\n  }\n\n  public async uploadAndEncryptCertificate(hcp_ssin: string, passphrase: string, certificate: ArrayBuffer): Promise<CertificateRecordType | undefined> {\n    try {\n      const salt = crypto.getRandomValues(new Uint8Array(16))\n      const iv = crypto.getRandomValues(new Uint8Array(12))\n\n      const passwordKey = await crypto.subtle.importKey('raw', new TextEncoder().encode(passphrase), { name: 'PBKDF2' }, false, ['deriveKey'])\n      const encryptionKey = await crypto.subtle.deriveKey(\n        {\n          name: 'PBKDF2',\n          salt,\n          iterations: 100_000,\n          hash: 'SHA-256',\n        },\n        passwordKey,\n        { name: 'AES-GCM', length: 256 },\n        false,\n        ['encrypt'],\n      )\n\n      const encryptedCertificate = await crypto.subtle.encrypt({ name: 'AES-GCM', iv }, encryptionKey, certificate)\n\n      const record: CertificateRecordType = {\n        id: hcp_ssin,\n        salt: Array.from(salt),\n        iv: Array.from(iv),\n        encryptedCertificate: Array.from(new Uint8Array(encryptedCertificate)),\n      }\n\n      const res = await this.saveCertificateInStore(hcp_ssin, record)\n      console.log('uploadAndEncryptCertificate res')\n      console.log(res)\n      return res\n    } catch (error) {\n      console.error(`Encryption failed for certificate of the HCP SSIN ${hcp_ssin}:`, error)\n      return undefined\n    }\n  }\n\n  public async deleteCertificate(hcp_ssin: string): Promise<boolean> {\n    try {\n      await this.deleteCertificateFromStore(hcp_ssin).then((res) => {\n        console.log('deleteCertificateFromStore res')\n        console.log(res)\n      })\n      console.log(`Certificate with ID ${hcp_ssin} successfully deleted.`)\n      return true\n    } catch (error) {\n      console.error(`Failed to delete certificate with ID ${hcp_ssin}:`, error)\n      return false\n    }\n  }\n\n  private async saveCertificateInStore(id: string, certificate: CertificateRecordType): Promise<CertificateRecordType> {\n    if (!this.certificateStore) throw new Error('CertificateService not initialized')\n    return await this.certificateStore.put(id, certificate)\n  }\n\n  private async getCertificateFromStore(id: string): Promise<CertificateRecordType> {\n    if (!this.certificateStore) throw new Error('CertificateService not initialized')\n    return this.certificateStore.get(id)\n  }\n\n  private async deleteCertificateFromStore(id: string): Promise<void> {\n    if (!this.certificateStore) throw new Error('CertificateService not initialized')\n    await this.certificateStore.delete(id)\n  }\n}\n","import { CertificateValidationResultType, GenericStoreType, PrescribedMedicationType } from '../../types'\nimport { Code as FhcCode, fhcRecipeApi, fhcStsApi, HealthcareParty, Patient, Prescription, PrescriptionRequest } from '@icure/be-fhc-lite-api'\nimport { IndexedDbService } from '../indexed-db'\nimport { FHC_URL, TOKEN_IDB_CONFIG } from '../constants'\nimport { dateEncode } from '../../utils/date-helpers'\nimport { CertificateService } from '../certificate'\n\nexport interface VendorType {\n  vendorName: string\n  vendorEmail: string\n  vendorPhone: string\n}\n\nexport interface SamPackageType {\n  packageName: string\n  packageVersion: string\n}\n\nexport interface FhcServiceConfig {\n  vendor: VendorType\n  samPackage: SamPackageType\n}\n\nexport class FhcService {\n  private tokenStore!: GenericStoreType<string>\n  private certificateService!: CertificateService\n  private indexedDbService: IndexedDbService\n\n  private vendor!: VendorType\n  private samPackage!: SamPackageType\n\n  private constructor(config: FhcServiceConfig) {\n    this.vendor = config.vendor\n    this.samPackage = config.samPackage\n    this.indexedDbService = new IndexedDbService(TOKEN_IDB_CONFIG)\n    // certificateService should be initialized after DB is ready\n  }\n\n  // Use this static method to create and initialize the service!\n  static async initialize(config: FhcServiceConfig, certificateService: CertificateService): Promise<FhcService> {\n    const service = new FhcService(config)\n    await service.indexedDbService.initializeIndexedDb()\n    service.tokenStore = service.indexedDbService.getIndexedDbStore<string>()\n    service.certificateService = certificateService\n    return service\n  }\n\n  public async sendRecipe(\n    samVersion: string,\n    prescriber: HealthcareParty,\n    patient: Patient,\n    prescribedMedication: PrescribedMedicationType,\n    passphrase: string,\n  ): Promise<Prescription[]> {\n    const prescription = this.makePrescriptionRequest(samVersion, prescriber, patient, prescribedMedication)\n    if (!prescriber?.ssin || !prescriber?.nihii) throw new Error('Missing prescriber information')\n\n    const keystore = await this.loadAndDecryptCertificate(prescriber.ssin, passphrase)\n    if (!keystore) throw new Error('Cannot obtain keystore')\n\n    const sts = new fhcStsApi(FHC_URL, [])\n    const recipe = new fhcRecipeApi(FHC_URL, [])\n\n    const { STORE_KEY, TOKEN_KEY } = this.buildTokenStorageKeys(prescriber)\n\n    // Get or upload keystore UUID\n    let keystoreUuid = await this.getTokenFromStore(STORE_KEY).catch(() => undefined)\n    if (!keystoreUuid) {\n      const { uuid } = await sts.uploadKeystoreUsingPOST(keystore)\n      if (!uuid) throw new Error('Cannot obtain keystore uuid')\n      await this.saveTokenInStore(STORE_KEY, uuid)\n      keystoreUuid = uuid\n    }\n\n    // Get token from STS\n    const tokenValue = await this.getTokenFromStore(TOKEN_KEY).catch(() => undefined)\n    const stsToken = await sts.requestTokenUsingGET(passphrase, prescriber.ssin, keystoreUuid, 'doctor', tokenValue)\n    if (!stsToken.tokenId) throw new Error('Cannot obtain token')\n\n    // Create all prescriptions (for each medication)\n    return Promise.all(\n      prescription.medications?.map((m) =>\n        recipe.createPrescriptionV4UsingPOST(\n          keystoreUuid,\n          stsToken.tokenId,\n          passphrase,\n          'persphysician',\n          prescriber.nihii,\n          prescriber.ssin,\n          `${prescriber.firstName} ${prescriber.lastName}`,\n          'iCure',\n          '1',\n          new PrescriptionRequest({ ...prescription, medications: [m] }),\n        ),\n      ) ?? [],\n    )\n  }\n\n  public async verifyCertificateWithSts(prescriber: HealthcareParty, passphrase: string): Promise<CertificateValidationResultType> {\n    if (!prescriber?.ssin || !prescriber?.nihii) {\n      return {\n        status: false,\n        error: {\n          en: 'Missing prescriber information',\n          fr: 'Informations du prescripteur manquantes',\n          nl: 'Ontbrekende voorschrijversinformatie',\n          de: 'Fehlende Verschreiberinformationen',\n        },\n      }\n    }\n    try {\n      const keystore = await this.loadAndDecryptCertificate(prescriber.ssin, passphrase)\n      if (!keystore) {\n        return {\n          status: false,\n          error: {\n            en: 'Cannot obtain the certificate',\n            fr: 'Impossible d’obtenir le certificat',\n            nl: 'Certificaat kan niet worden verkregen',\n            de: 'Zertifikat kann nicht abgerufen werden',\n          },\n        }\n      }\n\n      const { STORE_KEY } = this.buildTokenStorageKeys(prescriber)\n      const sts = new fhcStsApi(FHC_URL, [])\n      const { uuid } = await sts.uploadKeystoreUsingPOST(keystore)\n      if (!uuid) throw new Error('Cannot obtain keystore uuid')\n      await this.saveTokenInStore(STORE_KEY, uuid)\n\n      const token = await this.getTokenFromStore(STORE_KEY)\n      const stsToken = await sts.requestTokenUsingGET(passphrase, prescriber.ssin, token, 'doctor', token)\n      return { status: !!stsToken.tokenId }\n    } catch (error: any) {\n      return {\n        status: false,\n        error: {\n          en: error?.message || 'Unknown error occurred',\n          fr: error?.message || 'Une erreur inconnue est survenue',\n          nl: error?.message || 'Er is een onbekende fout opgetreden',\n          de: error?.message || 'Ein unbekannter Fehler ist aufgetreten',\n        },\n      }\n    }\n  }\n\n  public async validateDecryptedCertificate(hcp: HealthcareParty, passphrase: string): Promise<CertificateValidationResultType> {\n    try {\n      await this.loadAndDecryptCertificate(hcp.ssin, passphrase)\n      return await this.verifyCertificateWithSts(hcp, passphrase)\n    } catch {\n      return { status: false }\n    }\n  }\n\n  public createFhcCode(type: string, code: string, version = '1.0') {\n    return new FhcCode({ id: `${type}:${code}:${version}`, type, code, version })\n  }\n\n  private async getTokenFromStore(id: string): Promise<string> {\n    if (!this.tokenStore) throw new Error('PrescriptionService not initialized')\n    return this.tokenStore.get(id)\n  }\n\n  private async saveTokenInStore(id: string, token: string): Promise<string> {\n    if (!this.tokenStore) throw new Error('PrescriptionService not initialized')\n    return await this.tokenStore.put(id, token)\n  }\n\n  private async loadAndDecryptCertificate(hcp_ssin: string, passphrase: string): Promise<ArrayBuffer | undefined> {\n    return this.certificateService.loadAndDecryptCertificate(hcp_ssin, passphrase)\n  }\n\n  private buildTokenStorageKeys(hcp: HealthcareParty) {\n    return {\n      STORE_KEY: `keystore.${hcp.ssin}`,\n      TOKEN_KEY: `token.${hcp.ssin}`,\n    }\n  }\n\n  private makePrescriptionRequest(samVersion: string, prescriber: HealthcareParty, patient: Patient, prescribedMedication: PrescribedMedicationType): PrescriptionRequest {\n    return new PrescriptionRequest({\n      medications: [prescribedMedication.medication],\n      patient: {\n        firstName: patient.firstName,\n        lastName: patient.lastName,\n        ssin: patient.ssin,\n        dateOfBirth: patient.dateOfBirth,\n      },\n      hcp: {\n        firstName: prescriber.firstName,\n        lastName: prescriber.lastName,\n        ssin: prescriber.ssin,\n        nihii: prescriber.nihii,\n        addresses: prescriber.addresses,\n      },\n      feedback: false,\n      vendorName: this.vendor.vendorName,\n      vendorEmail: this.vendor.vendorEmail,\n      vendorPhone: this.vendor.vendorPhone,\n      packageName: this.samPackage.packageName,\n      packageVersion: this.samPackage.packageVersion,\n      vision: prescribedMedication.pharmacistVisibility,\n      visionOthers: prescribedMedication.prescriberVisibility,\n      samVersion,\n      deliveryDate: prescribedMedication.medication.beginMoment ?? dateEncode(new Date()),\n      expirationDate: prescribedMedication.medication.beginMoment ?? dateEncode(new Date(+new Date() + 1000 * 3600 * 24 * 90)),\n      lang: 'fr',\n    })\n  }\n}\n","import { PrescribedMedicationType } from '../types'\n\nexport const convertYyyyMmDdNumberToIsoDate = (dateNumber: number): string => {\n  const year = Math.floor(dateNumber / 10000)\n  const month = Math.floor((dateNumber % 10000) / 100)\n    .toString()\n    .padStart(2, '0')\n  const day = (dateNumber % 100).toString().padStart(2, '0')\n  return `${year}-${month}-${day}`\n}\n\nexport const getTreatmentStartDate = (prescribedMedication?: PrescribedMedicationType): string => {\n  if (prescribedMedication?.medication.beginMoment) {\n    return convertYyyyMmDdNumberToIsoDate(prescribedMedication?.medication.beginMoment)\n  } else {\n    return new Date().toISOString().split('T')[0]\n  }\n}\n\nexport const getExecutableUntilDate = (prescribedMedication?: PrescribedMedicationType): string => {\n  if (prescribedMedication?.medication.endMoment) {\n    return convertYyyyMmDdNumberToIsoDate(prescribedMedication.medication.endMoment)\n  } else {\n    const startDay = new Date()\n    const nextYear = new Date(startDay)\n    nextYear.setFullYear(startDay.getFullYear() + 1)\n    return nextYear.toISOString().split('T')[0]\n  }\n}\n\n// also known as formatToDayMonthYear\nexport const formatTimestamp = (timestamp?: number): string | undefined => {\n  if (!timestamp) {\n    return undefined\n  } else {\n    const date = new Date(timestamp)\n    const day = String(date.getDate()).padStart(2, '0')\n    const month = String(date.getMonth() + 1).padStart(2, '0') // Months are zero-based\n    const year = date.getFullYear()\n\n    return `${day}-${month}-${year}`\n  }\n}\n\nexport function dateDecode(date: number): Date {\n  return date > 99990000 ? new Date(date / 10000000000, ((date / 100000000) % 100) - 1, (date / 1000000) % 100) : new Date(date / 10000, ((date / 100) % 100) - 1, date % 100)\n}\n\nexport function dateEncode(date: Date): number {\n  return date.getFullYear() * 10000 + (date.getMonth() + 1) * 100 + date.getDate()\n}\n\nexport function offsetDate(date: number, offsetInDays: number): number {\n  const result = new Date(dateDecode(date)) // Decode the date\n  result.setDate(result.getDate() + offsetInDays) // Add or subtract the offset in days\n  return dateEncode(result) // Encode it back to the required format\n}\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Alert } from '../../common/Alert'\nimport { CertificateUploadForm } from '../CertificateUploadForm'\nimport { StyledPractitionerCertificate } from './styles'\n\ninterface PractitionerCertificate {\n  certificateValid: boolean\n  certificateUploaded: boolean\n  errorWhileVerifyingCertificate: string | undefined\n  onUploadCertificate: (certificateData: ArrayBuffer, passphrase: string) => void\n  onResetCertificate: () => void | Promise<void>\n}\n\nexport const PractitionerCertificate: React.FC<PractitionerCertificate> = ({\n  onResetCertificate,\n  certificateValid,\n  onUploadCertificate,\n  certificateUploaded,\n  errorWhileVerifyingCertificate,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledPractitionerCertificate>\n      {certificateValid && !errorWhileVerifyingCertificate && (\n        <Alert status=\"success\" title={t('practitioner.certificateFeedback.successTitle')} description={t('practitioner.certificateFeedback.successDescription')} />\n      )}\n\n      {!certificateValid && !certificateUploaded && (\n        <Alert status=\"error\" title={t('practitioner.certificateFeedback.failureTitle')} description={t('practitioner.certificateFeedback.failureDescription')} />\n      )}\n\n      {errorWhileVerifyingCertificate && <Alert status=\"error\" title={t('practitioner.certificateFeedback.verificationErrorTitle')} description={errorWhileVerifyingCertificate} />}\n\n      {certificateUploaded && errorWhileVerifyingCertificate && (\n        <Alert status=\"error\" title={t('practitioner.certificateUpload.passwordMissingTitle')} description={t('practitioner.certificateUpload.passwordMissingDescription')} />\n      )}\n\n      {(!certificateValid || !certificateUploaded) && (\n        <CertificateUploadForm onSubmit={onUploadCertificate} onReset={onResetCertificate} certificateAlreadyUploaded={certificateUploaded} />\n      )}\n    </StyledPractitionerCertificate>\n  )\n}\n","import styled, { css } from 'styled-components'\nimport { colors } from '../../../styles'\n\nexport const StyledAlert = styled.div<{ $success: boolean; $error: boolean }>`\n  width: 100%;\n  display: flex;\n  padding: 20px 24px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 6px;\n  align-self: stretch;\n  border-radius: 12px;\n  border: 1px solid white;\n\n  .heading {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    align-self: stretch;\n  }\n\n  h4 {\n    color: ${colors.grey[900]};\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 24px;\n  }\n\n  p {\n    color: ${colors.grey[900]};\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 22px;\n  }\n\n  ${({ $error }) =>\n    !!$error &&\n    css`\n      border-color: ${colors.red[400]};\n      background: ${colors.red[300]};\n    `};\n\n  ${({ $success }) =>\n    !!$success &&\n    css`\n      border-color: ${colors.green[400]};\n      background: ${colors.green[300]};\n    `};\n`\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n  /* Reset of the user agent styles */\n\n  * {\n    margin: 0;\n    padding: 0;\n    font-size: 100%;\n    box-sizing: border-box;\n  }\n  \n  // Links\n  a {\n    text-decoration: none;\n\n    &:active,\n    &:hover {\n      outline: 0;\n    }\n  }\n\n  // List\n  ul,\n  li {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  // Headlines\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-size: 100%;\n  }\n\n  // Default\n  html,\n  body {\n    box-sizing: border-box;\n    font-size: 16px;\n    background-color: #fbfdff;\n    font-family: 'Lato', sans-serif;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n\n  :focus {\n    outline: 0;\n  }\n\n  img,\n  audio,\n  video {\n    max-width: 100%;\n    height: auto;\n  }\n\n  iframe {\n    border: 0;\n  }\n\n  // Form\n  textarea {\n    resize: none;\n    /*remove the resize handle on the bottom right*/\n    overflow: auto;\n    vertical-align: top;\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n\n  input,\n  textarea,\n  select,\n  button {\n    outline: none;\n    border: none;\n    font-size: 100%;\n    margin: 0;\n  }\n\n  button,\n  input {\n    line-height: normal;\n  }\n\n  // browser user agent input reset\n\n  input:-webkit-autofill,\n  input:-webkit-autofill:hover,\n  input:-webkit-autofill:focus,\n  textarea:-webkit-autofill,\n  textarea:-webkit-autofill:hover,\n  textarea:-webkit-autofill:focus,\n  select:-webkit-autofill,\n  select:-webkit-autofill:hover,\n  select:-webkit-autofill:focus {\n    -webkit-text-fill-color: rgb(0, 0, 0);\n    transition: background-color 5000s ease-in-out 0s;\n  }\n\n  // Table\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  td,\n  th {\n    padding: 0;\n    text-align: left;\n  }\n`\n","export const colors = {\n  blue: {\n    800: '#084b83',\n    600: '#4b6682',\n    500: '#3d87c5',\n    300: '#eef6fe',\n    200: '#f9fbfe',\n    100: '#dce7f2',\n  },\n  grey: {\n    900: '#1d2235',\n    650: '#9ca8b2',\n    600: '#848482',\n    550: '#cad0d5',\n    300: '#e4e4e7',\n    200: '#f5f5f5',\n    100: '#fcfcfd',\n  },\n  orange: {\n    900: '#ef762f',\n  },\n  green: {\n    400: '#b7eb8f',\n    300: '#f6ffed',\n    200: '#e5fae5',\n  },\n  red: {\n    800: '#FF0000FF',\n    400: '#ffccc7',\n    300: '#fff1f0',\n  },\n} as const\n","import { css } from 'styled-components'\nimport { colors } from './variables'\n\nexport const fieldCommonStyles = css`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 4px;\n  align-self: stretch;\n`\n\nexport const inputCommonStyles = css`\n  width: 100%;\n  display: flex;\n  height: 32px;\n  padding: 5px 12px;\n  align-items: center;\n  gap: 4px;\n  align-self: stretch;\n  cursor: pointer;\n\n  border-radius: 6px;\n  border: 1px solid ${colors.grey[550]};\n  background: #fff;\n\n  color: ${colors.grey[900]};\n  font-family: 'Inter Variable', sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 22px;\n\n  &::placeholder {\n    color: ${colors.grey[650]};\n  }\n\n  &:hover,\n  &:focus {\n    border-color: ${colors.blue[800]};\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 2px rgba(61, 135, 197, 0.2);\n  }\n`\n\nexport const inputCommonStyles_disabled = css`\n  cursor: not-allowed;\n  background-color: ${colors.grey[200]};\n  border-color: ${colors.grey[550]};\n  opacity: 0.7;\n\n  &:hover {\n    border-color: ${colors.grey[550]};\n  }\n`\n\nexport const inputCommonStyles_error = css`\n  border-color: red;\n  color: red;\n\n  &::placeholder {\n    color: rgba(255, 0, 0, 0.5);\n  }\n\n  &:hover {\n    border-color: rgba(255, 0, 0, 0.5);\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 2px rgba(255, 0, 0, 0.2);\n  }\n`\n\nexport const labelCommonStyles = css`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  gap: 4px;\n  color: ${colors.grey[900]};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 22px;\n  cursor: pointer;\n\n  span {\n    display: none;\n  }\n`\n\nexport const labelCommonStyles_required = css`\n  span {\n    display: flex;\n    color: red;\n    font-weight: bold;\n  }\n`\n\nexport const labelCommonStyles_error = css`\n  color: red;\n`\n\nexport const errorMessageCommonStyles = css`\n  color: red;\n  font-size: 13px;\n`\n","import { css } from 'styled-components'\n\nexport const displayResolution = {\n  xs: 420,\n  s: 576,\n  m: 768,\n  l: 992,\n  xl: 1200,\n  xxl: 1400,\n}\n\nexport const responsiveMediaQueries = {\n  up:\n    (size: number) =>\n    (first: TemplateStringsArray, ...args: { [key: string]: string }[]) => css`\n      @media (min-width: ${size}px) {\n        ${css(first, ...args)}\n      }\n    `,\n  down:\n    (size: number) =>\n    (first: TemplateStringsArray, ...args: { [key: string]: string }[]) => css`\n      @media (max-width: ${size}px) {\n        ${css(first, ...args)}\n      }\n    `,\n  between:\n    (min: number, max: number) =>\n    (first: TemplateStringsArray, ...args: { [key: string]: string }[]) => css`\n      @media (min-width: ${displayResolution[min]}px) and (max-width: ${displayResolution[max]}px) {\n        ${css(first, ...args)}\n      }\n    `,\n}\n","import React from 'react'\n\nexport function SpinnerIcn({ pathFill = '#000000', size = 12 }: { pathFill?: string; size?: number }) {\n  const sizePx = `${size}px`\n  return (\n    <svg style={{ width: sizePx, height: sizePx }} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\" width=\"24\" height=\"24\">\n      <g>\n        <circle strokeDasharray=\"169.64600329384882 58.548667764616276\" r=\"36\" strokeWidth=\"12\" stroke={pathFill} fill=\"none\" cy=\"50\" cx=\"50\">\n          <animateTransform keyTimes=\"0;1\" values=\"0 50 50;360 50 50\" dur=\"1s\" repeatCount=\"indefinite\" type=\"rotate\" attributeName=\"transform\"></animateTransform>\n        </circle>\n        <g></g>\n      </g>\n    </svg>\n  )\n}\n\nexport const StatusSuccessIcn = () => (\n  <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0_1152_2420)\">\n      <path\n        d=\"M13 0C5.82098 0 0 5.82098 0 13C0 20.179 5.82098 26 13 26C20.179 26 26 20.179 26 13C26 5.82098 20.179 0\n        13 0ZM18.615 8.75469L12.5038 17.2279C12.4184 17.3471 12.3058 17.4443 12.1753 17.5113C12.0449 17.5783 11.9003\n        17.6132 11.7537 17.6132C11.607 17.6132 11.4625 17.5783 11.332 17.5113C11.2016 17.4443 11.089 17.3471 11.0036\n        17.2279L7.38504 12.2136C7.27478 12.0598 7.38504 11.8451 7.57366 11.8451H8.9346C9.23058 11.8451 9.51205 11.9873\n        9.68616 12.231L11.7522 15.098L16.3138 8.7721C16.4879 8.53125 16.7665 8.38616 17.0654 8.38616H18.4263C18.615\n        8.38616 18.7252 8.60089 18.615 8.75469Z\"\n        fill=\"#52C41A\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1152_2420\">\n        <rect width=\"26\" height=\"26\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n)\n\nexport const StatusErrorIcn = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M12 0C18.6268 0 24 5.37321 24 12C24 18.6268 18.6268 24 12 24C5.37321 24 0 18.6268 0 12C0 5.37321 5.37321 0\n      12 0ZM15.428 7.36125H15.427L15.4248 7.36286L12 10.7879L8.57518 7.36286C8.57411 7.36152 8.57357 7.36125 8.57304\n      7.36125C8.57242 7.36106 8.57177 7.36106 8.57116 7.36125C8.57036 7.36125 8.56982 7.36152 8.56875 7.36259L7.36286\n      8.56848C7.36221 8.56916 7.36175 8.56999 7.36152 8.57089C7.36133 8.5715 7.36133 8.57216 7.36152\n      8.57277V8.5733C7.36197 8.57392 7.36251 8.57446 7.36313 8.57491L10.7879 12L7.36286 15.4248C7.36152 15.4259\n      7.36125 15.4264 7.36125 15.427C7.36106 15.4276 7.36106 15.4282 7.36125 15.4288C7.36125 15.4296 7.36152 15.4302\n      7.36259 15.4312L8.56848 16.6371C8.56916 16.6378 8.56999 16.6383 8.57089 16.6385C8.5715 16.6387 8.57216 16.6387\n      8.57277 16.6385C8.5733 16.6385 8.57384 16.6382 8.57491 16.6371L12 13.2121L15.4248 16.6371C15.4259 16.6382 15.4264\n      16.6385 15.427 16.6385C15.4276 16.6387 15.4282 16.6387 15.4288 16.6385C15.4296 16.6385 15.4302 16.6382 15.4312\n      16.6371L16.6371 15.4312C16.6378 15.4306 16.6383 15.4297 16.6385 15.4288C16.6387 15.4282 16.6387 15.4276 16.6385\n      15.427V15.4264C16.6381 15.4258 16.6377 15.4253 16.6371 15.4248L13.2121 12L16.6371 8.57518C16.6382 8.57411 16.6385\n      8.57357 16.6385 8.57304C16.6387 8.57242 16.6387 8.57177 16.6385 8.57116C16.6385 8.57036 16.6382 8.56982 16.6371\n      8.56875L15.4312 7.36286C15.4306 7.36221 15.4297 7.36175 15.4288 7.36152C15.4282 7.36133 15.4276 7.36133 15.427\n      7.36152L15.428 7.36125Z\"\n      fill=\"#FF4D4F\"\n    />\n  </svg>\n)\n","import React, { FC } from 'react'\nimport { StyledAlert } from './styles'\nimport { StatusErrorIcn, StatusSuccessIcn } from '../Icons'\n\ninterface AlertProps {\n  status: 'success' | 'error'\n  title: string\n  description: string\n}\n\nexport const Alert: FC<AlertProps> = ({ status, title, description }) => {\n  return (\n    <StyledAlert $success={status === 'success'} $error={status === 'error'}>\n      <div className=\"heading\">\n        {status === 'success' && <StatusSuccessIcn />}\n        {status === 'error' && <StatusErrorIcn />}\n        <h4>{title}</h4>\n      </div>\n      <p>{description}</p>\n    </StyledAlert>\n  )\n}\n","import React from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useTranslation } from 'react-i18next'\nimport { readFileAsArrayBuffer } from '../../../utils/file-helpers'\nimport { Button } from '../../form-elements/Button'\nimport { TextInput } from '../../form-elements/TextInput'\nimport { StyledCertificateForm, StyledCertificateUpload } from './styles'\n\ninterface CertificateUploadFormProps {\n  onSubmit: (certificateData: ArrayBuffer, passphrase: string) => void\n  onReset: () => void | Promise<void>\n  certificateAlreadyUploaded: boolean\n}\n\ntype CertificateFormType = {\n  certificate: FileList\n  password: string\n}\n\nexport const CertificateUploadForm: React.FC<CertificateUploadFormProps> = ({ onSubmit, onReset, certificateAlreadyUploaded }) => {\n  const { t } = useTranslation()\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors: certificateFormError },\n  } = useForm<CertificateFormType>()\n\n  const handleFormSubmit = async ({ certificate, password }: CertificateFormType) => {\n    const certificateData: ArrayBuffer = await readFileAsArrayBuffer(certificate[0])\n    onSubmit(certificateData, password)\n  }\n\n  const onUploadedAnotherCertificate = async (): Promise<void> => {\n    onReset()\n    reset()\n  }\n\n  return (\n    <StyledCertificateUpload>\n      <StyledCertificateForm onSubmit={handleSubmit(handleFormSubmit)} id=\"uploadCertificateForm\">\n        <h3>{!certificateAlreadyUploaded ? t('practitioner.certificateUpload.titleUpload') : t('practitioner.certificateUpload.titlePassword')}</h3>\n\n        <div className=\"inputs\">\n          <TextInput\n            label={t('practitioner.certificateUpload.fileLabel')}\n            type=\"file\"\n            id=\"certificate\"\n            accept=\".p12,.acc-p12\"\n            required\n            {...register('certificate', {\n              required: t('practitioner.certificateUpload.errorRequired'),\n            })}\n            errorMessage={certificateFormError['certificate']?.message}\n          />\n\n          <TextInput\n            label={t('practitioner.certificateUpload.passwordLabel')}\n            type=\"password\"\n            id=\"password\"\n            required\n            {...register('password', {\n              required: t('practitioner.certificateUpload.errorRequired'),\n            })}\n            errorMessage={certificateFormError['password']?.message}\n          />\n        </div>\n\n        <Button\n          title={!certificateAlreadyUploaded ? t('practitioner.certificateUpload.submitButtonUpload') : t('practitioner.certificateUpload.submitButtonPassword')}\n          type=\"submit\"\n          form=\"uploadCertificateForm\"\n        />\n      </StyledCertificateForm>\n      {certificateAlreadyUploaded && (\n        <Button title={t('practitioner.certificateUpload.resetButton')} type=\"reset\" view=\"outlined\" form=\"uploadCertificateForm\" handleClick={onUploadedAnotherCertificate} />\n      )}\n    </StyledCertificateUpload>\n  )\n}\n","export const readFileAsArrayBuffer = (file: File): Promise<ArrayBuffer> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = () => resolve(reader.result as ArrayBuffer)\n    reader.onerror = () => reject(reader.error)\n    reader.readAsArrayBuffer(file)\n  })\n}\n","import styled, { css } from 'styled-components'\nimport { colors } from '../../../styles'\nimport { ButtonViewType } from './index'\n\nconst viewStyles = ($view?: ButtonViewType) => {\n  switch ($view) {\n    case 'primary':\n      return css`\n        background: ${colors.blue[800]};\n        color: #ffffff;\n\n        &:hover {\n          opacity: 0.9;\n        }\n      `\n    case 'outlined':\n      return css`\n        border-radius: 6px;\n        border-color: ${colors.grey[550]};\n        background: ${colors.grey[100]};\n        color: ${colors.blue[800]};\n\n        &:hover {\n          border-color: ${colors.blue[800]};\n        }\n      `\n    case 'withSpinner':\n      return css`\n        border-radius: 6px;\n        border-color: ${colors.grey[550]};\n        background: ${colors.grey[100]};\n        color: ${colors.blue[800]};\n        gap: 8px;\n      `\n    default:\n      return null\n  }\n}\n\nexport const StyledButton = styled.button<{ $view?: 'primary' | 'withSpinner' | 'outlined' }>`\n  display: flex;\n  height: 32px;\n  padding: 0 16px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 6px;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  border: 1px solid ${colors.blue[800]};\n  cursor: pointer;\n  min-width: 64px;\n\n  ${({ $view }) => viewStyles($view)}\n  &[disabled],\n  &[disabled]:hover {\n    cursor: not-allowed;\n    border-color: ${colors.grey[550]};\n    background: ${colors.grey[200]};\n    color: ${colors.grey[600]};\n  }\n`\n","import React from 'react'\nimport { SpinnerIcn } from '../../common/Icons'\nimport { StyledButton } from './styles'\nimport { GlobalStyles } from '../../../styles'\n\nexport type ButtonViewType = 'primary' | 'withSpinner' | 'outlined'\n\ninterface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  title: string\n  view?: ButtonViewType\n  type?: 'button' | 'reset' | 'submit'\n  form?: string\n  disabled?: boolean\n  handleClick?: () => void\n}\n\nexport const Button: React.FC<Props> = ({ title, view = 'primary', handleClick, type = 'button', ...rest }) => {\n  return (\n    <>\n      <GlobalStyles />\n      <StyledButton $view={view} onClick={handleClick} type={type} {...rest}>\n        {view === 'withSpinner' ? SpinnerIcn({}) : title}\n      </StyledButton>\n    </>\n  )\n}\n","import React, { forwardRef, useEffect, useRef } from 'react'\nimport { StyledInput, StyledTextInput, StyledTextInputLabel } from './styles'\n\ninterface Props extends React.InputHTMLAttributes<HTMLInputElement> {\n  label: string\n  id: string\n  required?: boolean\n  disabled?: boolean\n  errorMessage?: string\n  autoFocus?: boolean\n}\n\nexport const TextInput = forwardRef<HTMLInputElement, Props>(({ label, id, required, errorMessage, disabled, autoFocus, ...rest }, ref) => {\n  const localRef = useRef<HTMLInputElement>(null)\n\n  useEffect(() => {\n    if (autoFocus && localRef.current) {\n      localRef.current.focus()\n    }\n  }, [autoFocus])\n\n  return (\n    <StyledTextInput>\n      <StyledTextInputLabel htmlFor={id} $required={required} $error={!!errorMessage}>\n        <span>*</span>\n        {label}\n      </StyledTextInputLabel>\n      <StyledInput\n        id={id}\n        name={id}\n        ref={(node) => {\n          if (typeof ref === 'function') {\n            ref(node)\n          } else if (ref) {\n            ref.current = node\n          }\n          localRef.current = node\n        }}\n        placeholder={label}\n        {...rest}\n        $disabled={disabled}\n        $error={!!errorMessage}\n      />\n      {errorMessage && <p className=\"error\">{errorMessage}</p>}\n    </StyledTextInput>\n  )\n})\n\nTextInput.displayName = 'TextInput'\n","import styled, { css } from 'styled-components'\nimport {\n  colors,\n  errorMessageCommonStyles,\n  fieldCommonStyles,\n  inputCommonStyles,\n  inputCommonStyles_disabled,\n  inputCommonStyles_error,\n  labelCommonStyles,\n  labelCommonStyles_error,\n  labelCommonStyles_required,\n} from '../../../styles'\n\nexport const StyledTextInputLabel = styled.label<{ $required?: boolean; $error?: boolean }>`\n  ${labelCommonStyles};\n  ${({ $error }) =>\n    !!$error &&\n    css`\n      ${labelCommonStyles_error}\n    `};\n  ${({ $required }) =>\n    !!$required &&\n    css`\n      ${labelCommonStyles_required}\n    `};\n`\nexport const StyledTextInput = styled.div`\n  ${fieldCommonStyles};\n\n  .error {\n    ${errorMessageCommonStyles}\n  }\n`\nexport const StyledInput = styled.input<{ $disabled?: boolean; $error?: boolean }>`\n  ${inputCommonStyles};\n\n  &::file-selector-button {\n    border-radius: 0;\n    height: 100%;\n    cursor: pointer;\n    background-color: white;\n    border: none;\n    border-right: 1px solid ${colors.grey[550]};\n    margin-right: 16px;\n    padding-right: 12px;\n    transition: background-color 200ms;\n    color: ${colors.grey[650]};\n  }\n\n  ${({ $error }) =>\n    !!$error &&\n    css`\n      ${inputCommonStyles_error}\n      &::file-selector-button {\n        color: rgba(255, 0, 0, 0.5);\n        border-color: red;\n      }\n    `};\n  ${({ $disabled }) =>\n    !!$disabled &&\n    css`\n      ${inputCommonStyles_disabled}\n    `};\n`\n","import styled from 'styled-components'\nimport { colors, displayResolution, responsiveMediaQueries } from '../../../styles'\n\nexport const StyledCertificateUpload = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  align-self: stretch;\n  gap: 12px;\n`\n\nexport const StyledCertificateForm = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  align-self: stretch;\n  border-radius: 12px;\n  border: 1px solid ${colors.grey[300]};\n  background: #fff;\n  padding: 24px;\n  gap: 12px;\n\n  ${responsiveMediaQueries.down(displayResolution.l)`\n   padding: 18px;\n  `}\n  h3 {\n    color: ${colors.grey[900]};\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n  }\n\n  .inputs {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    align-self: stretch;\n    gap: 12px;\n  }\n`\n","import styled from 'styled-components'\nimport { displayResolution, responsiveMediaQueries } from '../../../styles'\n\nexport const StyledPractitionerCertificate = styled.div`\n  width: 50%;\n  min-width: 700px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n\n  ${responsiveMediaQueries.down(displayResolution.m)`\n  width: 100%;\n    min-width: 100%;\n  `}\n`\n"],"mappings":"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","names":["useTranslation","css","css","css","jsx","jsxs","styled","css","css","styled","jsx","jsxs","styled","css","styled","css","jsx","jsxs","styled","styled","jsx","jsxs","styled","styled","jsx","jsxs","useTranslation"]}